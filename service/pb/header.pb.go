// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: service/proto/header.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,10,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,20,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseMsg) Reset() {
	*x = ResponseMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMsg) ProtoMessage() {}

func (x *ResponseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMsg.ProtoReflect.Descriptor instead.
func (*ResponseMsg) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{0}
}

func (x *ResponseMsg) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseMsg) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *String) Reset() {
	*x = String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{1}
}

func (x *String) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Bool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Bool) Reset() {
	*x = Bool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bool) ProtoMessage() {}

func (x *Bool) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bool.ProtoReflect.Descriptor instead.
func (*Bool) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{2}
}

func (x *Bool) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type SectorPaths struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strs []*String `protobuf:"bytes,1,rep,name=strs,proto3" json:"strs,omitempty"`
}

func (x *SectorPaths) Reset() {
	*x = SectorPaths{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorPaths) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorPaths) ProtoMessage() {}

func (x *SectorPaths) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorPaths.ProtoReflect.Descriptor instead.
func (*SectorPaths) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{3}
}

func (x *SectorPaths) GetStrs() []*String {
	if x != nil {
		return x.Strs
	}
	return nil
}

type WorkerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId    string        `protobuf:"bytes,10,opt,name=OpId,proto3" json:"OpId,omitempty"`
	Workers []*OpenWindow `protobuf:"bytes,20,rep,name=workers,proto3" json:"workers,omitempty"`
}

func (x *WorkerList) Reset() {
	*x = WorkerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerList) ProtoMessage() {}

func (x *WorkerList) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerList.ProtoReflect.Descriptor instead.
func (*WorkerList) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{4}
}

func (x *WorkerList) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *WorkerList) GetWorkers() []*OpenWindow {
	if x != nil {
		return x.Workers
	}
	return nil
}

type OpenWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip         string `protobuf:"bytes,10,opt,name=ip,proto3" json:"ip,omitempty"`
	WorkerId   string `protobuf:"bytes,30,opt,name=workerId,proto3" json:"workerId,omitempty"`
	RunC2      bool   `protobuf:"varint,40,opt,name=runC2,proto3" json:"runC2,omitempty"`
	Storage    bool   `protobuf:"varint,50,opt,name=storage,proto3" json:"storage,omitempty"`       //是否存储worker
	Disconnect bool   `protobuf:"varint,60,opt,name=disconnect,proto3" json:"disconnect,omitempty"` //是否离线
}

func (x *OpenWindow) Reset() {
	*x = OpenWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenWindow) ProtoMessage() {}

func (x *OpenWindow) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenWindow.ProtoReflect.Descriptor instead.
func (*OpenWindow) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{5}
}

func (x *OpenWindow) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *OpenWindow) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *OpenWindow) GetRunC2() bool {
	if x != nil {
		return x.RunC2
	}
	return false
}

func (x *OpenWindow) GetStorage() bool {
	if x != nil {
		return x.Storage
	}
	return false
}

func (x *OpenWindow) GetDisconnect() bool {
	if x != nil {
		return x.Disconnect
	}
	return false
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tid        string                 `protobuf:"bytes,1,opt,name=Tid,proto3" json:"Tid,omitempty"`
	Ip         string                 `protobuf:"bytes,10,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Wid        string                 `protobuf:"bytes,20,opt,name=Wid,proto3" json:"Wid,omitempty"`
	SectorId   uint64                 `protobuf:"varint,30,opt,name=SectorId,proto3" json:"SectorId,omitempty"`
	SectorSize uint64                 `protobuf:"varint,31,opt,name=sectorSize,proto3" json:"sectorSize,omitempty"`
	MinerId    string                 `protobuf:"bytes,40,opt,name=MinerId,proto3" json:"MinerId,omitempty"`
	TType      string                 `protobuf:"bytes,50,opt,name=TType,proto3" json:"TType,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,60,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	CarPath    string                 `protobuf:"bytes,70,opt,name=CarPath,proto3" json:"CarPath,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{6}
}

func (x *Task) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *Task) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Task) GetWid() string {
	if x != nil {
		return x.Wid
	}
	return ""
}

func (x *Task) GetSectorId() uint64 {
	if x != nil {
		return x.SectorId
	}
	return 0
}

func (x *Task) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *Task) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *Task) GetTType() string {
	if x != nil {
		return x.TType
	}
	return ""
}

func (x *Task) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Task) GetCarPath() string {
	if x != nil {
		return x.CarPath
	}
	return ""
}

type TaskList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*Task `protobuf:"bytes,10,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *TaskList) Reset() {
	*x = TaskList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskList) ProtoMessage() {}

func (x *TaskList) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskList.ProtoReflect.Descriptor instead.
func (*TaskList) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{7}
}

func (x *TaskList) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type LotusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LotusId       uint64      `protobuf:"varint,7,opt,name=lotusId,proto3" json:"lotusId,omitempty"`
	GateId        string      `protobuf:"bytes,8,opt,name=GateId,proto3" json:"GateId,omitempty"`
	OpId          string      `protobuf:"bytes,9,opt,name=OpId,proto3" json:"OpId,omitempty"`
	Ip            string      `protobuf:"bytes,10,opt,name=Ip,proto3" json:"Ip,omitempty"`
	SecpCount     int32       `protobuf:"varint,30,opt,name=SecpCount,proto3" json:"SecpCount,omitempty"`
	BlsCount      int32       `protobuf:"varint,40,opt,name=BlsCount,proto3" json:"BlsCount,omitempty"`
	ImportMode    int32       `protobuf:"varint,50,opt,name=ImportMode,proto3" json:"ImportMode,omitempty"`       //0拷贝，1导入,2正常运行
	FileName      string      `protobuf:"bytes,51,opt,name=fileName,proto3" json:"fileName,omitempty"`            //快照或者高度文件名称
	WalletNewMode int32       `protobuf:"varint,60,opt,name=walletNewMode,proto3" json:"walletNewMode,omitempty"` //0创建，1拷贝
	ReRaid        bool        `protobuf:"varint,61,opt,name=reRaid,proto3" json:"reRaid,omitempty"`               //是否组raid
	Wallets       []*OpWallet `protobuf:"bytes,70,rep,name=wallets,proto3" json:"wallets,omitempty"`
}

func (x *LotusInfo) Reset() {
	*x = LotusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotusInfo) ProtoMessage() {}

func (x *LotusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotusInfo.ProtoReflect.Descriptor instead.
func (*LotusInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{8}
}

func (x *LotusInfo) GetLotusId() uint64 {
	if x != nil {
		return x.LotusId
	}
	return 0
}

func (x *LotusInfo) GetGateId() string {
	if x != nil {
		return x.GateId
	}
	return ""
}

func (x *LotusInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *LotusInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LotusInfo) GetSecpCount() int32 {
	if x != nil {
		return x.SecpCount
	}
	return 0
}

func (x *LotusInfo) GetBlsCount() int32 {
	if x != nil {
		return x.BlsCount
	}
	return 0
}

func (x *LotusInfo) GetImportMode() int32 {
	if x != nil {
		return x.ImportMode
	}
	return 0
}

func (x *LotusInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *LotusInfo) GetWalletNewMode() int32 {
	if x != nil {
		return x.WalletNewMode
	}
	return 0
}

func (x *LotusInfo) GetReRaid() bool {
	if x != nil {
		return x.ReRaid
	}
	return false
}

func (x *LotusInfo) GetWallets() []*OpWallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

type OpWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId    string `protobuf:"bytes,1,opt,name=opId,proto3" json:"opId,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *OpWallet) Reset() {
	*x = OpWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpWallet) ProtoMessage() {}

func (x *OpWallet) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpWallet.ProtoReflect.Descriptor instead.
func (*OpWallet) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{9}
}

func (x *OpWallet) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *OpWallet) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type OpMiner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId  string `protobuf:"bytes,10,opt,name=opId,proto3" json:"opId,omitempty"`
	Miner string `protobuf:"bytes,20,opt,name=miner,proto3" json:"miner,omitempty"`
}

func (x *OpMiner) Reset() {
	*x = OpMiner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpMiner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpMiner) ProtoMessage() {}

func (x *OpMiner) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpMiner.ProtoReflect.Descriptor instead.
func (*OpMiner) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{10}
}

func (x *OpMiner) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *OpMiner) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

type Wallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId    string  `protobuf:"bytes,9,opt,name=opId,proto3" json:"opId,omitempty"`
	Address string  `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	Balance float64 `protobuf:"fixed64,20,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{11}
}

func (x *Wallet) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *Wallet) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Wallet) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type WalletList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallets []*Wallet `protobuf:"bytes,1,rep,name=wallets,proto3" json:"wallets,omitempty"`
}

func (x *WalletList) Reset() {
	*x = WalletList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletList) ProtoMessage() {}

func (x *WalletList) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletList.ProtoReflect.Descriptor instead.
func (*WalletList) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{12}
}

func (x *WalletList) GetWallets() []*Wallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

type RequestOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GateId string `protobuf:"bytes,10,opt,name=gateId,proto3" json:"gateId,omitempty"`
	OpId   string `protobuf:"bytes,20,opt,name=opId,proto3" json:"opId,omitempty"`
	Token  string `protobuf:"bytes,30,opt,name=token,proto3" json:"token,omitempty"`
	Ip     string `protobuf:"bytes,40,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *RequestOp) Reset() {
	*x = RequestOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestOp) ProtoMessage() {}

func (x *RequestOp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestOp.ProtoReflect.Descriptor instead.
func (*RequestOp) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{13}
}

func (x *RequestOp) GetGateId() string {
	if x != nil {
		return x.GateId
	}
	return ""
}

func (x *RequestOp) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *RequestOp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RequestOp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type RequestConnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port  string `protobuf:"bytes,10,opt,name=port,proto3" json:"port,omitempty"`
	Token string `protobuf:"bytes,20,opt,name=token,proto3" json:"token,omitempty"`
	OpId  string `protobuf:"bytes,30,opt,name=opId,proto3" json:"opId,omitempty"`
	Ip    string `protobuf:"bytes,40,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *RequestConnect) Reset() {
	*x = RequestConnect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestConnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestConnect) ProtoMessage() {}

func (x *RequestConnect) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestConnect.ProtoReflect.Descriptor instead.
func (*RequestConnect) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{14}
}

func (x *RequestConnect) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *RequestConnect) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RequestConnect) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *RequestConnect) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type ConnectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	Ip           string `protobuf:"bytes,10,opt,name=ip,proto3" json:"ip,omitempty"`
	Token        string `protobuf:"bytes,30,opt,name=token,proto3" json:"token,omitempty"`
	DeployStatus int32  `protobuf:"varint,40,opt,name=deployStatus,proto3" json:"deployStatus,omitempty"`
	SyncStatus   int32  `protobuf:"varint,41,opt,name=syncStatus,proto3" json:"syncStatus,omitempty"`
	RunStatus    int32  `protobuf:"varint,42,opt,name=runStatus,proto3" json:"runStatus,omitempty"`
	Actor        string `protobuf:"bytes,50,opt,name=actor,proto3" json:"actor,omitempty"`
	ErrMsg       string `protobuf:"bytes,60,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *ConnectInfo) Reset() {
	*x = ConnectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectInfo) ProtoMessage() {}

func (x *ConnectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectInfo.ProtoReflect.Descriptor instead.
func (*ConnectInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{15}
}

func (x *ConnectInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ConnectInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConnectInfo) GetDeployStatus() int32 {
	if x != nil {
		return x.DeployStatus
	}
	return 0
}

func (x *ConnectInfo) GetSyncStatus() int32 {
	if x != nil {
		return x.SyncStatus
	}
	return 0
}

func (x *ConnectInfo) GetRunStatus() int32 {
	if x != nil {
		return x.RunStatus
	}
	return 0
}

func (x *ConnectInfo) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *ConnectInfo) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type MinerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerId     uint64 `protobuf:"varint,9,opt,name=minerId,proto3" json:"minerId,omitempty"`
	AddType     int32  `protobuf:"varint,10,opt,name=addType,proto3" json:"addType,omitempty"`
	OpId        string `protobuf:"bytes,20,opt,name=opId,proto3" json:"opId,omitempty"`
	LotusId     uint64 `protobuf:"varint,30,opt,name=lotusId,proto3" json:"lotusId,omitempty"`
	Ip          string `protobuf:"bytes,31,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Actor       string `protobuf:"bytes,33,opt,name=actor,proto3" json:"actor,omitempty"`
	LotusToken  string `protobuf:"bytes,34,opt,name=lotusToken,proto3" json:"lotusToken,omitempty"`
	Partitions  string `protobuf:"bytes,35,opt,name=partitions,proto3" json:"partitions,omitempty"`
	LotusIp     string `protobuf:"bytes,36,opt,name=lotusIp,proto3" json:"lotusIp,omitempty"`
	Owner       string `protobuf:"bytes,40,opt,name=owner,proto3" json:"owner,omitempty"`
	IsManage    bool   `protobuf:"varint,50,opt,name=isManage,proto3" json:"isManage,omitempty"`
	IsWdpost    bool   `protobuf:"varint,60,opt,name=isWdpost,proto3" json:"isWdpost,omitempty"`
	IsWnpost    bool   `protobuf:"varint,70,opt,name=isWnpost,proto3" json:"isWnpost,omitempty"`
	SectorSize  uint64 `protobuf:"varint,80,opt,name=sectorSize,proto3" json:"sectorSize,omitempty"`
	ReRaid      bool   `protobuf:"varint,90,opt,name=reRaid,proto3" json:"reRaid,omitempty"`
	StorageType int32  `protobuf:"varint,100,opt,name=storageType,proto3" json:"storageType,omitempty"` //存储类型1:nfs，0：worker
}

func (x *MinerInfo) Reset() {
	*x = MinerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerInfo) ProtoMessage() {}

func (x *MinerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerInfo.ProtoReflect.Descriptor instead.
func (*MinerInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{16}
}

func (x *MinerInfo) GetMinerId() uint64 {
	if x != nil {
		return x.MinerId
	}
	return 0
}

func (x *MinerInfo) GetAddType() int32 {
	if x != nil {
		return x.AddType
	}
	return 0
}

func (x *MinerInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *MinerInfo) GetLotusId() uint64 {
	if x != nil {
		return x.LotusId
	}
	return 0
}

func (x *MinerInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *MinerInfo) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *MinerInfo) GetLotusToken() string {
	if x != nil {
		return x.LotusToken
	}
	return ""
}

func (x *MinerInfo) GetPartitions() string {
	if x != nil {
		return x.Partitions
	}
	return ""
}

func (x *MinerInfo) GetLotusIp() string {
	if x != nil {
		return x.LotusIp
	}
	return ""
}

func (x *MinerInfo) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *MinerInfo) GetIsManage() bool {
	if x != nil {
		return x.IsManage
	}
	return false
}

func (x *MinerInfo) GetIsWdpost() bool {
	if x != nil {
		return x.IsWdpost
	}
	return false
}

func (x *MinerInfo) GetIsWnpost() bool {
	if x != nil {
		return x.IsWnpost
	}
	return false
}

func (x *MinerInfo) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *MinerInfo) GetReRaid() bool {
	if x != nil {
		return x.ReRaid
	}
	return false
}

func (x *MinerInfo) GetStorageType() int32 {
	if x != nil {
		return x.StorageType
	}
	return 0
}

type MinerRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip         string `protobuf:"bytes,1,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Actor      string `protobuf:"bytes,2,opt,name=actor,proto3" json:"actor,omitempty"`
	LotusToken string `protobuf:"bytes,3,opt,name=lotusToken,proto3" json:"lotusToken,omitempty"`
	Partitions string `protobuf:"bytes,4,opt,name=partitions,proto3" json:"partitions,omitempty"`
	IsManage   bool   `protobuf:"varint,5,opt,name=isManage,proto3" json:"isManage,omitempty"`
	IsWdpost   bool   `protobuf:"varint,6,opt,name=isWdpost,proto3" json:"isWdpost,omitempty"`
	IsWnpost   bool   `protobuf:"varint,7,opt,name=isWnpost,proto3" json:"isWnpost,omitempty"`
	LotusIp    string `protobuf:"bytes,10,opt,name=lotusIp,proto3" json:"lotusIp,omitempty"`
	OpId       string `protobuf:"bytes,11,opt,name=opId,proto3" json:"opId,omitempty"`
}

func (x *MinerRun) Reset() {
	*x = MinerRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerRun) ProtoMessage() {}

func (x *MinerRun) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerRun.ProtoReflect.Descriptor instead.
func (*MinerRun) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{17}
}

func (x *MinerRun) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *MinerRun) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *MinerRun) GetLotusToken() string {
	if x != nil {
		return x.LotusToken
	}
	return ""
}

func (x *MinerRun) GetPartitions() string {
	if x != nil {
		return x.Partitions
	}
	return ""
}

func (x *MinerRun) GetIsManage() bool {
	if x != nil {
		return x.IsManage
	}
	return false
}

func (x *MinerRun) GetIsWdpost() bool {
	if x != nil {
		return x.IsWdpost
	}
	return false
}

func (x *MinerRun) GetIsWnpost() bool {
	if x != nil {
		return x.IsWnpost
	}
	return false
}

func (x *MinerRun) GetLotusIp() string {
	if x != nil {
		return x.LotusIp
	}
	return ""
}

func (x *MinerRun) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

type WorkerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	Ip         string `protobuf:"bytes,30,opt,name=ip,proto3" json:"ip,omitempty"`
	MinerToken string `protobuf:"bytes,50,opt,name=minerToken,proto3" json:"minerToken,omitempty"`
	MinerIp    string `protobuf:"bytes,51,opt,name=minerIp,proto3" json:"minerIp,omitempty"`
}

func (x *WorkerInfo) Reset() {
	*x = WorkerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerInfo) ProtoMessage() {}

func (x *WorkerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerInfo.ProtoReflect.Descriptor instead.
func (*WorkerInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{18}
}

func (x *WorkerInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkerInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *WorkerInfo) GetMinerToken() string {
	if x != nil {
		return x.MinerToken
	}
	return ""
}

func (x *WorkerInfo) GetMinerIp() string {
	if x != nil {
		return x.MinerIp
	}
	return ""
}

type StorageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MountDir  string `protobuf:"bytes,1,opt,name=mountDir,proto3" json:"mountDir,omitempty"`
	NodeIp    string `protobuf:"bytes,2,opt,name=nodeIp,proto3" json:"nodeIp,omitempty"`
	StorageIp string `protobuf:"bytes,3,opt,name=storageIp,proto3" json:"storageIp,omitempty"`
}

func (x *StorageInfo) Reset() {
	*x = StorageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageInfo) ProtoMessage() {}

func (x *StorageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageInfo.ProtoReflect.Descriptor instead.
func (*StorageInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{19}
}

func (x *StorageInfo) GetMountDir() string {
	if x != nil {
		return x.MountDir
	}
	return ""
}

func (x *StorageInfo) GetNodeIp() string {
	if x != nil {
		return x.NodeIp
	}
	return ""
}

func (x *StorageInfo) GetStorageIp() string {
	if x != nil {
		return x.StorageIp
	}
	return ""
}

type HostParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip   string `protobuf:"bytes,10,opt,name=ip,proto3" json:"ip,omitempty"`
	OpId string `protobuf:"bytes,20,opt,name=opId,proto3" json:"opId,omitempty"`
}

func (x *HostParam) Reset() {
	*x = HostParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostParam) ProtoMessage() {}

func (x *HostParam) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostParam.ProtoReflect.Descriptor instead.
func (*HostParam) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{20}
}

func (x *HostParam) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HostParam) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *HostParam) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

type BatchWorker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    []*HostParam `protobuf:"bytes,10,rep,name=host,proto3" json:"host,omitempty"`
	MinerId uint64       `protobuf:"varint,30,opt,name=minerId,proto3" json:"minerId,omitempty"` //节点号
	GateId  string       `protobuf:"bytes,40,opt,name=gateId,proto3" json:"gateId,omitempty"`
}

func (x *BatchWorker) Reset() {
	*x = BatchWorker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchWorker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchWorker) ProtoMessage() {}

func (x *BatchWorker) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchWorker.ProtoReflect.Descriptor instead.
func (*BatchWorker) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{21}
}

func (x *BatchWorker) GetHost() []*HostParam {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *BatchWorker) GetMinerId() uint64 {
	if x != nil {
		return x.MinerId
	}
	return 0
}

func (x *BatchWorker) GetGateId() string {
	if x != nil {
		return x.GateId
	}
	return ""
}

type BatchStroage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host        []*HostParam `protobuf:"bytes,9,rep,name=host,proto3" json:"host,omitempty"`
	StorageType int32        `protobuf:"varint,20,opt,name=storageType,proto3" json:"storageType,omitempty"` //1NFS,0 worker
	Node        string       `protobuf:"bytes,30,opt,name=node,proto3" json:"node,omitempty"`                //节点号
	GateId      string       `protobuf:"bytes,40,opt,name=gateId,proto3" json:"gateId,omitempty"`
}

func (x *BatchStroage) Reset() {
	*x = BatchStroage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchStroage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchStroage) ProtoMessage() {}

func (x *BatchStroage) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchStroage.ProtoReflect.Descriptor instead.
func (*BatchStroage) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{22}
}

func (x *BatchStroage) GetHost() []*HostParam {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *BatchStroage) GetStorageType() int32 {
	if x != nil {
		return x.StorageType
	}
	return 0
}

func (x *BatchStroage) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *BatchStroage) GetGateId() string {
	if x != nil {
		return x.GateId
	}
	return ""
}

type BoostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64 `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	LanIp         string `protobuf:"bytes,10,opt,name=lanIp,proto3" json:"lanIp,omitempty"`
	LanPort       string `protobuf:"bytes,20,opt,name=lanPort,proto3" json:"lanPort,omitempty"`
	InternetIp    string `protobuf:"bytes,30,opt,name=internetIp,proto3" json:"internetIp,omitempty"`
	InternetPort  string `protobuf:"bytes,40,opt,name=internetPort,proto3" json:"internetPort,omitempty"`
	GateId        string `protobuf:"bytes,41,opt,name=gateId,proto3" json:"gateId,omitempty"`
	OpId          string `protobuf:"bytes,42,opt,name=opId,proto3" json:"opId,omitempty"`
	MinerId       uint64 `protobuf:"varint,49,opt,name=minerId,proto3" json:"minerId,omitempty"`
	MinerToken    string `protobuf:"bytes,50,opt,name=minerToken,proto3" json:"minerToken,omitempty"`
	MinerIp       string `protobuf:"bytes,51,opt,name=minerIp,proto3" json:"minerIp,omitempty"`
	Actor         string `protobuf:"bytes,55,opt,name=actor,proto3" json:"actor,omitempty"`
	LotusId       uint64 `protobuf:"varint,59,opt,name=lotusId,proto3" json:"lotusId,omitempty"`
	LotusToken    string `protobuf:"bytes,60,opt,name=lotusToken,proto3" json:"lotusToken,omitempty"`
	LotusIp       string `protobuf:"bytes,61,opt,name=lotusIp,proto3" json:"lotusIp,omitempty"`
	WorkerWallet  string `protobuf:"bytes,70,opt,name=workerWallet,proto3" json:"workerWallet,omitempty"`
	NetworkType   int32  `protobuf:"varint,80,opt,name=networkType,proto3" json:"networkType,omitempty"`
	DcQuotaWallet string `protobuf:"bytes,90,opt,name=dcQuotaWallet,proto3" json:"dcQuotaWallet,omitempty"`
}

func (x *BoostInfo) Reset() {
	*x = BoostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoostInfo) ProtoMessage() {}

func (x *BoostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoostInfo.ProtoReflect.Descriptor instead.
func (*BoostInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{23}
}

func (x *BoostInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BoostInfo) GetLanIp() string {
	if x != nil {
		return x.LanIp
	}
	return ""
}

func (x *BoostInfo) GetLanPort() string {
	if x != nil {
		return x.LanPort
	}
	return ""
}

func (x *BoostInfo) GetInternetIp() string {
	if x != nil {
		return x.InternetIp
	}
	return ""
}

func (x *BoostInfo) GetInternetPort() string {
	if x != nil {
		return x.InternetPort
	}
	return ""
}

func (x *BoostInfo) GetGateId() string {
	if x != nil {
		return x.GateId
	}
	return ""
}

func (x *BoostInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *BoostInfo) GetMinerId() uint64 {
	if x != nil {
		return x.MinerId
	}
	return 0
}

func (x *BoostInfo) GetMinerToken() string {
	if x != nil {
		return x.MinerToken
	}
	return ""
}

func (x *BoostInfo) GetMinerIp() string {
	if x != nil {
		return x.MinerIp
	}
	return ""
}

func (x *BoostInfo) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *BoostInfo) GetLotusId() uint64 {
	if x != nil {
		return x.LotusId
	}
	return 0
}

func (x *BoostInfo) GetLotusToken() string {
	if x != nil {
		return x.LotusToken
	}
	return ""
}

func (x *BoostInfo) GetLotusIp() string {
	if x != nil {
		return x.LotusIp
	}
	return ""
}

func (x *BoostInfo) GetWorkerWallet() string {
	if x != nil {
		return x.WorkerWallet
	}
	return ""
}

func (x *BoostInfo) GetNetworkType() int32 {
	if x != nil {
		return x.NetworkType
	}
	return 0
}

func (x *BoostInfo) GetDcQuotaWallet() string {
	if x != nil {
		return x.DcQuotaWallet
	}
	return ""
}

type StrategyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GateWayId    string `protobuf:"bytes,1,opt,name=GateWayId,proto3" json:"GateWayId,omitempty"`
	OpId         string `protobuf:"bytes,2,opt,name=OpId,proto3" json:"OpId,omitempty"`
	StrategiesId string `protobuf:"bytes,3,opt,name=strategiesId,proto3" json:"strategiesId,omitempty"`
	RoomId       string `protobuf:"bytes,4,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
}

func (x *StrategyInfo) Reset() {
	*x = StrategyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrategyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrategyInfo) ProtoMessage() {}

func (x *StrategyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrategyInfo.ProtoReflect.Descriptor instead.
func (*StrategyInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{24}
}

func (x *StrategyInfo) GetGateWayId() string {
	if x != nil {
		return x.GateWayId
	}
	return ""
}

func (x *StrategyInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *StrategyInfo) GetStrategiesId() string {
	if x != nil {
		return x.StrategiesId
	}
	return ""
}

func (x *StrategyInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type WarnInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WarnId         string `protobuf:"bytes,1,opt,name=WarnId,proto3" json:"WarnId,omitempty"`
	WarnName       string `protobuf:"bytes,2,opt,name=WarnName,proto3" json:"WarnName,omitempty"`
	WarnType       int32  `protobuf:"varint,3,opt,name=WarnType,proto3" json:"WarnType,omitempty"`
	ComputerId     string `protobuf:"bytes,4,opt,name=ComputerId,proto3" json:"ComputerId,omitempty"`
	WarnInfo       string `protobuf:"bytes,5,opt,name=WarnInfo,proto3" json:"WarnInfo,omitempty"`
	ComputerRoomId string `protobuf:"bytes,6,opt,name=ComputerRoomId,proto3" json:"ComputerRoomId,omitempty"`
}

func (x *WarnInfo) Reset() {
	*x = WarnInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarnInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarnInfo) ProtoMessage() {}

func (x *WarnInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarnInfo.ProtoReflect.Descriptor instead.
func (*WarnInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{25}
}

func (x *WarnInfo) GetWarnId() string {
	if x != nil {
		return x.WarnId
	}
	return ""
}

func (x *WarnInfo) GetWarnName() string {
	if x != nil {
		return x.WarnName
	}
	return ""
}

func (x *WarnInfo) GetWarnType() int32 {
	if x != nil {
		return x.WarnType
	}
	return 0
}

func (x *WarnInfo) GetComputerId() string {
	if x != nil {
		return x.ComputerId
	}
	return ""
}

func (x *WarnInfo) GetWarnInfo() string {
	if x != nil {
		return x.WarnInfo
	}
	return ""
}

func (x *WarnInfo) GetComputerRoomId() string {
	if x != nil {
		return x.ComputerRoomId
	}
	return ""
}

type RunStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsRun       bool   `protobuf:"varint,2,opt,name=isRun,proto3" json:"isRun,omitempty"`
	OpId        string `protobuf:"bytes,3,opt,name=opId,proto3" json:"opId,omitempty"`
	ServiceType int32  `protobuf:"varint,4,opt,name=serviceType,proto3" json:"serviceType,omitempty"` //服务类型：1lotus,2miner,3任务worker,4存储worker
	LinkId      uint64 `protobuf:"varint,5,opt,name=linkId,proto3" json:"linkId,omitempty"`
}

func (x *RunStop) Reset() {
	*x = RunStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStop) ProtoMessage() {}

func (x *RunStop) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStop.ProtoReflect.Descriptor instead.
func (*RunStop) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{26}
}

func (x *RunStop) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RunStop) GetIsRun() bool {
	if x != nil {
		return x.IsRun
	}
	return false
}

func (x *RunStop) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *RunStop) GetServiceType() int32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *RunStop) GetLinkId() uint64 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

type RunStopType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceType int32 `protobuf:"varint,1,opt,name=serviceType,proto3" json:"serviceType,omitempty"` //服务类型：1lotus,2miner,3任务worker,4存储worker
	IsRun       bool  `protobuf:"varint,2,opt,name=isRun,proto3" json:"isRun,omitempty"`
}

func (x *RunStopType) Reset() {
	*x = RunStopType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunStopType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStopType) ProtoMessage() {}

func (x *RunStopType) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStopType.ProtoReflect.Descriptor instead.
func (*RunStopType) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{27}
}

func (x *RunStopType) GetServiceType() int32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *RunStopType) GetIsRun() bool {
	if x != nil {
		return x.IsRun
	}
	return false
}

type OpUndone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId   string `protobuf:"bytes,10,opt,name=opId,proto3" json:"opId,omitempty"`
	Undone int32  `protobuf:"varint,20,opt,name=undone,proto3" json:"undone,omitempty"`
}

func (x *OpUndone) Reset() {
	*x = OpUndone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpUndone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpUndone) ProtoMessage() {}

func (x *OpUndone) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpUndone.ProtoReflect.Descriptor instead.
func (*OpUndone) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{28}
}

func (x *OpUndone) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *OpUndone) GetUndone() int32 {
	if x != nil {
		return x.Undone
	}
	return 0
}

type AddFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType    int64       `protobuf:"varint,1,opt,name=FileType,proto3" json:"FileType,omitempty"`
	AddType     int64       `protobuf:"varint,2,opt,name=AddType,proto3" json:"AddType,omitempty"`
	GateWayId   string      `protobuf:"bytes,3,opt,name=GateWayId,proto3" json:"GateWayId,omitempty"`
	OpId        string      `protobuf:"bytes,4,opt,name=OpId,proto3" json:"OpId,omitempty"`
	FileUrl     string      `protobuf:"bytes,5,opt,name=FileUrl,proto3" json:"FileUrl,omitempty"`
	Ip          string      `protobuf:"bytes,6,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port        string      `protobuf:"bytes,7,opt,name=Port,proto3" json:"Port,omitempty"`
	FromPath    string      `protobuf:"bytes,8,opt,name=FromPath,proto3" json:"FromPath,omitempty"`
	ToPath      string      `protobuf:"bytes,9,opt,name=ToPath,proto3" json:"ToPath,omitempty"`
	ZipFileName string      `protobuf:"bytes,10,opt,name=ZipFileName,proto3" json:"ZipFileName,omitempty"`
	Id          string      `protobuf:"bytes,11,opt,name=Id,proto3" json:"Id,omitempty"`
	FileName    string      `protobuf:"bytes,15,opt,name=FileName,proto3" json:"FileName,omitempty"`
	RoomId      string      `protobuf:"bytes,18,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	RoomName    string      `protobuf:"bytes,19,opt,name=RoomName,proto3" json:"RoomName,omitempty"`
	FileData    []byte      `protobuf:"bytes,20,opt,name=FileData,proto3" json:"FileData,omitempty"`
	FileInfo    []*FileInfo `protobuf:"bytes,12,rep,name=fileInfo,proto3" json:"fileInfo,omitempty"`
}

func (x *AddFileInfo) Reset() {
	*x = AddFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFileInfo) ProtoMessage() {}

func (x *AddFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFileInfo.ProtoReflect.Descriptor instead.
func (*AddFileInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{29}
}

func (x *AddFileInfo) GetFileType() int64 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *AddFileInfo) GetAddType() int64 {
	if x != nil {
		return x.AddType
	}
	return 0
}

func (x *AddFileInfo) GetGateWayId() string {
	if x != nil {
		return x.GateWayId
	}
	return ""
}

func (x *AddFileInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *AddFileInfo) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *AddFileInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AddFileInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *AddFileInfo) GetFromPath() string {
	if x != nil {
		return x.FromPath
	}
	return ""
}

func (x *AddFileInfo) GetToPath() string {
	if x != nil {
		return x.ToPath
	}
	return ""
}

func (x *AddFileInfo) GetZipFileName() string {
	if x != nil {
		return x.ZipFileName
	}
	return ""
}

func (x *AddFileInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddFileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *AddFileInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *AddFileInfo) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *AddFileInfo) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

func (x *AddFileInfo) GetFileInfo() []*FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       string `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	FileName   string `protobuf:"bytes,2,opt,name=FileName,proto3" json:"FileName,omitempty"`
	FileData   []byte `protobuf:"bytes,3,opt,name=FileData,proto3" json:"FileData,omitempty"`
	FileSize   int64  `protobuf:"varint,4,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	OpId       string `protobuf:"bytes,5,opt,name=OpId,proto3" json:"OpId,omitempty"`
	Miner      uint64 `protobuf:"varint,6,opt,name=Miner,proto3" json:"Miner,omitempty"`
	Number     uint64 `protobuf:"varint,8,opt,name=Number,proto3" json:"Number,omitempty"`
	Host       string `protobuf:"bytes,10,opt,name=Host,proto3" json:"Host,omitempty"`
	FileType   int64  `protobuf:"varint,20,opt,name=FileType,proto3" json:"FileType,omitempty"`
	TimeLength string `protobuf:"bytes,30,opt,name=TimeLength,proto3" json:"TimeLength,omitempty"`
	TaskStatus int64  `protobuf:"varint,40,opt,name=TaskStatus,proto3" json:"TaskStatus,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{30}
}

func (x *FileInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileInfo) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

func (x *FileInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *FileInfo) GetMiner() uint64 {
	if x != nil {
		return x.Miner
	}
	return 0
}

func (x *FileInfo) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *FileInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FileInfo) GetFileType() int64 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *FileInfo) GetTimeLength() string {
	if x != nil {
		return x.TimeLength
	}
	return ""
}

func (x *FileInfo) GetTaskStatus() int64 {
	if x != nil {
		return x.TaskStatus
	}
	return 0
}

type SynFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromPath    string      `protobuf:"bytes,1,opt,name=FromPath,proto3" json:"FromPath,omitempty"`
	ToPath      string      `protobuf:"bytes,2,opt,name=ToPath,proto3" json:"ToPath,omitempty"`
	GateWayId   string      `protobuf:"bytes,3,opt,name=GateWayId,proto3" json:"GateWayId,omitempty"`
	OpId        string      `protobuf:"bytes,4,opt,name=OpId,proto3" json:"OpId,omitempty"`
	ToOpId      string      `protobuf:"bytes,5,opt,name=ToOpId,proto3" json:"ToOpId,omitempty"`
	Ip          string      `protobuf:"bytes,6,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port        string      `protobuf:"bytes,7,opt,name=Port,proto3" json:"Port,omitempty"`
	IsDelete    int64       `protobuf:"varint,10,opt,name=IsDelete,proto3" json:"IsDelete,omitempty"`
	FileInfo    []*FileInfo `protobuf:"bytes,8,rep,name=fileInfo,proto3" json:"fileInfo,omitempty"`
	ZipFileName string      `protobuf:"bytes,12,opt,name=ZipFileName,proto3" json:"ZipFileName,omitempty"`
}

func (x *SynFileInfo) Reset() {
	*x = SynFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SynFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynFileInfo) ProtoMessage() {}

func (x *SynFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynFileInfo.ProtoReflect.Descriptor instead.
func (*SynFileInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{31}
}

func (x *SynFileInfo) GetFromPath() string {
	if x != nil {
		return x.FromPath
	}
	return ""
}

func (x *SynFileInfo) GetToPath() string {
	if x != nil {
		return x.ToPath
	}
	return ""
}

func (x *SynFileInfo) GetGateWayId() string {
	if x != nil {
		return x.GateWayId
	}
	return ""
}

func (x *SynFileInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *SynFileInfo) GetToOpId() string {
	if x != nil {
		return x.ToOpId
	}
	return ""
}

func (x *SynFileInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SynFileInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *SynFileInfo) GetIsDelete() int64 {
	if x != nil {
		return x.IsDelete
	}
	return 0
}

func (x *SynFileInfo) GetFileInfo() []*FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *SynFileInfo) GetZipFileName() string {
	if x != nil {
		return x.ZipFileName
	}
	return ""
}

type DownLoadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GateWayId    string      `protobuf:"bytes,1,opt,name=GateWayId,proto3" json:"GateWayId,omitempty"`
	OpInfo       []*OpInfo   `protobuf:"bytes,2,rep,name=opInfo,proto3" json:"opInfo,omitempty"`
	FileInfo     []*FileInfo `protobuf:"bytes,3,rep,name=fileInfo,proto3" json:"fileInfo,omitempty"`
	DownloadPath string      `protobuf:"bytes,4,opt,name=DownloadPath,proto3" json:"DownloadPath,omitempty"`
	GateWayPath  string      `protobuf:"bytes,5,opt,name=GateWayPath,proto3" json:"GateWayPath,omitempty"`
}

func (x *DownLoadInfo) Reset() {
	*x = DownLoadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownLoadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownLoadInfo) ProtoMessage() {}

func (x *DownLoadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownLoadInfo.ProtoReflect.Descriptor instead.
func (*DownLoadInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{32}
}

func (x *DownLoadInfo) GetGateWayId() string {
	if x != nil {
		return x.GateWayId
	}
	return ""
}

func (x *DownLoadInfo) GetOpInfo() []*OpInfo {
	if x != nil {
		return x.OpInfo
	}
	return nil
}

func (x *DownLoadInfo) GetFileInfo() []*FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *DownLoadInfo) GetDownloadPath() string {
	if x != nil {
		return x.DownloadPath
	}
	return ""
}

func (x *DownLoadInfo) GetGateWayPath() string {
	if x != nil {
		return x.GateWayPath
	}
	return ""
}

type OpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip         string `protobuf:"bytes,1,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port       string `protobuf:"bytes,2,opt,name=Port,proto3" json:"Port,omitempty"`
	GpuUse     bool   `protobuf:"varint,10,opt,name=GpuUse,proto3" json:"GpuUse,omitempty"`
	Disconnect bool   `protobuf:"varint,20,opt,name=Disconnect,proto3" json:"Disconnect,omitempty"`
	OpId       string `protobuf:"bytes,30,opt,name=OpId,proto3" json:"OpId,omitempty"`
}

func (x *OpInfo) Reset() {
	*x = OpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpInfo) ProtoMessage() {}

func (x *OpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpInfo.ProtoReflect.Descriptor instead.
func (*OpInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{33}
}

func (x *OpInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *OpInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *OpInfo) GetGpuUse() bool {
	if x != nil {
		return x.GpuUse
	}
	return false
}

func (x *OpInfo) GetDisconnect() bool {
	if x != nil {
		return x.Disconnect
	}
	return false
}

func (x *OpInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

type WorkerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId      string `protobuf:"bytes,10,opt,name=opId,proto3" json:"opId,omitempty"`
	Id        uint64 `protobuf:"varint,20,opt,name=id,proto3" json:"id,omitempty"`
	PreCount1 int32  `protobuf:"varint,30,opt,name=PreCount1,proto3" json:"PreCount1,omitempty"`
	PreCount2 int32  `protobuf:"varint,40,opt,name=PreCount2,proto3" json:"PreCount2,omitempty"`
}

func (x *WorkerConfig) Reset() {
	*x = WorkerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerConfig) ProtoMessage() {}

func (x *WorkerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerConfig.ProtoReflect.Descriptor instead.
func (*WorkerConfig) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{34}
}

func (x *WorkerConfig) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *WorkerConfig) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkerConfig) GetPreCount1() int32 {
	if x != nil {
		return x.PreCount1
	}
	return 0
}

func (x *WorkerConfig) GetPreCount2() int32 {
	if x != nil {
		return x.PreCount2
	}
	return 0
}

type HostTestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestType    int64  `protobuf:"varint,1,opt,name=TestType,proto3" json:"TestType,omitempty"`
	HostUUID    string `protobuf:"bytes,2,opt,name=HostUUID,proto3" json:"HostUUID,omitempty"`
	TestMode    int64  `protobuf:"varint,3,opt,name=TestMode,proto3" json:"TestMode,omitempty"`
	TestBeginAt int64  `protobuf:"varint,4,opt,name=TestBeginAt,proto3" json:"TestBeginAt,omitempty"`
	IsAddPower  bool   `protobuf:"varint,5,opt,name=IsAddPower,proto3" json:"IsAddPower,omitempty"`
	HostUUIDs   string `protobuf:"bytes,6,opt,name=HostUUIDs,proto3" json:"HostUUIDs,omitempty"`
	HostIPs     string `protobuf:"bytes,7,opt,name=HostIPs,proto3" json:"HostIPs,omitempty"`
}

func (x *HostTestInfo) Reset() {
	*x = HostTestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostTestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostTestInfo) ProtoMessage() {}

func (x *HostTestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostTestInfo.ProtoReflect.Descriptor instead.
func (*HostTestInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{35}
}

func (x *HostTestInfo) GetTestType() int64 {
	if x != nil {
		return x.TestType
	}
	return 0
}

func (x *HostTestInfo) GetHostUUID() string {
	if x != nil {
		return x.HostUUID
	}
	return ""
}

func (x *HostTestInfo) GetTestMode() int64 {
	if x != nil {
		return x.TestMode
	}
	return 0
}

func (x *HostTestInfo) GetTestBeginAt() int64 {
	if x != nil {
		return x.TestBeginAt
	}
	return 0
}

func (x *HostTestInfo) GetIsAddPower() bool {
	if x != nil {
		return x.IsAddPower
	}
	return false
}

func (x *HostTestInfo) GetHostUUIDs() string {
	if x != nil {
		return x.HostUUIDs
	}
	return ""
}

func (x *HostTestInfo) GetHostIPs() string {
	if x != nil {
		return x.HostIPs
	}
	return ""
}

type HostCheckDiskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GateWayId string `protobuf:"bytes,1,opt,name=GateWayId,proto3" json:"GateWayId,omitempty"`
	HostUUID  string `protobuf:"bytes,2,opt,name=HostUUID,proto3" json:"HostUUID,omitempty"`
}

func (x *HostCheckDiskInfo) Reset() {
	*x = HostCheckDiskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostCheckDiskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostCheckDiskInfo) ProtoMessage() {}

func (x *HostCheckDiskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostCheckDiskInfo.ProtoReflect.Descriptor instead.
func (*HostCheckDiskInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{36}
}

func (x *HostCheckDiskInfo) GetGateWayId() string {
	if x != nil {
		return x.GateWayId
	}
	return ""
}

func (x *HostCheckDiskInfo) GetHostUUID() string {
	if x != nil {
		return x.HostUUID
	}
	return ""
}

type SectorID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Miner    string `protobuf:"bytes,10,opt,name=Miner,proto3" json:"Miner,omitempty"`
	Number   uint64 `protobuf:"varint,20,opt,name=Number,proto3" json:"Number,omitempty"`
	PieceCid string `protobuf:"bytes,30,opt,name=PieceCid,proto3" json:"PieceCid,omitempty"`
}

func (x *SectorID) Reset() {
	*x = SectorID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorID) ProtoMessage() {}

func (x *SectorID) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorID.ProtoReflect.Descriptor instead.
func (*SectorID) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{37}
}

func (x *SectorID) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *SectorID) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *SectorID) GetPieceCid() string {
	if x != nil {
		return x.PieceCid
	}
	return ""
}

type SectorList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sectors []*SectorID `protobuf:"bytes,1,rep,name=sectors,proto3" json:"sectors,omitempty"`
}

func (x *SectorList) Reset() {
	*x = SectorList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorList) ProtoMessage() {}

func (x *SectorList) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorList.ProtoReflect.Descriptor instead.
func (*SectorList) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{38}
}

func (x *SectorList) GetSectors() []*SectorID {
	if x != nil {
		return x.Sectors
	}
	return nil
}

type SectorStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sector *SectorID `protobuf:"bytes,10,opt,name=sector,proto3" json:"sector,omitempty"`
	Status string    `protobuf:"bytes,20,opt,name=status,proto3" json:"status,omitempty"`
	Type   int32     `protobuf:"varint,30,opt,name=type,proto3" json:"type,omitempty"`
	Size   uint64    `protobuf:"varint,40,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SectorStatus) Reset() {
	*x = SectorStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorStatus) ProtoMessage() {}

func (x *SectorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorStatus.ProtoReflect.Descriptor instead.
func (*SectorStatus) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{39}
}

func (x *SectorStatus) GetSector() *SectorID {
	if x != nil {
		return x.Sector
	}
	return nil
}

func (x *SectorStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SectorStatus) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SectorStatus) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SectorCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sectors []*StatusCount `protobuf:"bytes,10,rep,name=sectors,proto3" json:"sectors,omitempty"`
}

func (x *SectorCount) Reset() {
	*x = SectorCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorCount) ProtoMessage() {}

func (x *SectorCount) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorCount.ProtoReflect.Descriptor instead.
func (*SectorCount) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{40}
}

func (x *SectorCount) GetSectors() []*StatusCount {
	if x != nil {
		return x.Sectors
	}
	return nil
}

type StatusCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	Count  int32  `protobuf:"varint,20,opt,name=count,proto3" json:"count,omitempty"`
	Store  int32  `protobuf:"varint,30,opt,name=store,proto3" json:"store,omitempty"`
	PreMsg int32  `protobuf:"varint,40,opt,name=preMsg,proto3" json:"preMsg,omitempty"`
}

func (x *StatusCount) Reset() {
	*x = StatusCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusCount) ProtoMessage() {}

func (x *StatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusCount.ProtoReflect.Descriptor instead.
func (*StatusCount) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{41}
}

func (x *StatusCount) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StatusCount) GetStore() int32 {
	if x != nil {
		return x.Store
	}
	return 0
}

func (x *StatusCount) GetPreMsg() int32 {
	if x != nil {
		return x.PreMsg
	}
	return 0
}

type SectorTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sector  *SectorID `protobuf:"bytes,10,opt,name=sector,proto3" json:"sector,omitempty"`
	TicketH uint64    `protobuf:"varint,20,opt,name=ticketH,proto3" json:"ticketH,omitempty"`
	Ticket  string    `protobuf:"bytes,30,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Status  string    `protobuf:"bytes,40,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SectorTicket) Reset() {
	*x = SectorTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorTicket) ProtoMessage() {}

func (x *SectorTicket) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorTicket.ProtoReflect.Descriptor instead.
func (*SectorTicket) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{42}
}

func (x *SectorTicket) GetSector() *SectorID {
	if x != nil {
		return x.Sector
	}
	return nil
}

func (x *SectorTicket) GetTicketH() uint64 {
	if x != nil {
		return x.TicketH
	}
	return 0
}

func (x *SectorTicket) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *SectorTicket) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SectorPiece struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sector    *SectorID `protobuf:"bytes,10,opt,name=sector,proto3" json:"sector,omitempty"`
	DealId    uint64    `protobuf:"varint,20,opt,name=DealId,proto3" json:"DealId,omitempty"`
	PieceCid  string    `protobuf:"bytes,30,opt,name=PieceCid,proto3" json:"PieceCid,omitempty"`
	PieceSize uint64    `protobuf:"varint,40,opt,name=PieceSize,proto3" json:"PieceSize,omitempty"`
}

func (x *SectorPiece) Reset() {
	*x = SectorPiece{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorPiece) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorPiece) ProtoMessage() {}

func (x *SectorPiece) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorPiece.ProtoReflect.Descriptor instead.
func (*SectorPiece) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{43}
}

func (x *SectorPiece) GetSector() *SectorID {
	if x != nil {
		return x.Sector
	}
	return nil
}

func (x *SectorPiece) GetDealId() uint64 {
	if x != nil {
		return x.DealId
	}
	return 0
}

func (x *SectorPiece) GetPieceCid() string {
	if x != nil {
		return x.PieceCid
	}
	return ""
}

func (x *SectorPiece) GetPieceSize() uint64 {
	if x != nil {
		return x.PieceSize
	}
	return 0
}

type SectorLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string                 `protobuf:"bytes,9,opt,name=ID,proto3" json:"ID,omitempty"`
	Sector       *SectorID              `protobuf:"bytes,10,opt,name=sector,proto3" json:"sector,omitempty"`
	SectorStatus string                 `protobuf:"bytes,20,opt,name=sectorStatus,proto3" json:"sectorStatus,omitempty"`
	WorkerId     string                 `protobuf:"bytes,30,opt,name=workerId,proto3" json:"workerId,omitempty"`
	WorkerIp     string                 `protobuf:"bytes,40,opt,name=workerIp,proto3" json:"workerIp,omitempty"`
	ErrorMsg     string                 `protobuf:"bytes,50,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	FinishAt     *timestamppb.Timestamp `protobuf:"bytes,60,opt,name=finishAt,proto3" json:"finishAt,omitempty"`
}

func (x *SectorLog) Reset() {
	*x = SectorLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorLog) ProtoMessage() {}

func (x *SectorLog) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorLog.ProtoReflect.Descriptor instead.
func (*SectorLog) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{44}
}

func (x *SectorLog) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SectorLog) GetSector() *SectorID {
	if x != nil {
		return x.Sector
	}
	return nil
}

func (x *SectorLog) GetSectorStatus() string {
	if x != nil {
		return x.SectorStatus
	}
	return ""
}

func (x *SectorLog) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *SectorLog) GetWorkerIp() string {
	if x != nil {
		return x.WorkerIp
	}
	return ""
}

func (x *SectorLog) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *SectorLog) GetFinishAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishAt
	}
	return nil
}

type SectorCommDR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sector *SectorID `protobuf:"bytes,10,opt,name=sector,proto3" json:"sector,omitempty"`
	CommD  string    `protobuf:"bytes,20,opt,name=commD,proto3" json:"commD,omitempty"`
	CommR  string    `protobuf:"bytes,30,opt,name=commR,proto3" json:"commR,omitempty"`
	Status string    `protobuf:"bytes,40,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SectorCommDR) Reset() {
	*x = SectorCommDR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorCommDR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorCommDR) ProtoMessage() {}

func (x *SectorCommDR) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorCommDR.ProtoReflect.Descriptor instead.
func (*SectorCommDR) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{45}
}

func (x *SectorCommDR) GetSector() *SectorID {
	if x != nil {
		return x.Sector
	}
	return nil
}

func (x *SectorCommDR) GetCommD() string {
	if x != nil {
		return x.CommD
	}
	return ""
}

func (x *SectorCommDR) GetCommR() string {
	if x != nil {
		return x.CommR
	}
	return ""
}

func (x *SectorCommDR) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SectorSeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sector *SectorID `protobuf:"bytes,10,opt,name=sector,proto3" json:"sector,omitempty"`
	SeedH  uint64    `protobuf:"varint,20,opt,name=seedH,proto3" json:"seedH,omitempty"`
	Seed   string    `protobuf:"bytes,30,opt,name=seed,proto3" json:"seed,omitempty"`
	Status string    `protobuf:"bytes,40,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SectorSeed) Reset() {
	*x = SectorSeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorSeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorSeed) ProtoMessage() {}

func (x *SectorSeed) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorSeed.ProtoReflect.Descriptor instead.
func (*SectorSeed) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{46}
}

func (x *SectorSeed) GetSector() *SectorID {
	if x != nil {
		return x.Sector
	}
	return nil
}

func (x *SectorSeed) GetSeedH() uint64 {
	if x != nil {
		return x.SeedH
	}
	return 0
}

func (x *SectorSeed) GetSeed() string {
	if x != nil {
		return x.Seed
	}
	return ""
}

func (x *SectorSeed) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SectorProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sector *SectorID `protobuf:"bytes,10,opt,name=sector,proto3" json:"sector,omitempty"`
	Proof  string    `protobuf:"bytes,20,opt,name=proof,proto3" json:"proof,omitempty"`
	Status string    `protobuf:"bytes,30,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SectorProof) Reset() {
	*x = SectorProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorProof) ProtoMessage() {}

func (x *SectorProof) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorProof.ProtoReflect.Descriptor instead.
func (*SectorProof) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{47}
}

func (x *SectorProof) GetSector() *SectorID {
	if x != nil {
		return x.Sector
	}
	return nil
}

func (x *SectorProof) GetProof() string {
	if x != nil {
		return x.Proof
	}
	return ""
}

func (x *SectorProof) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SectorPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *SectorID `protobuf:"bytes,10,opt,name=Id,proto3" json:"Id,omitempty"`
	StoreId     string    `protobuf:"bytes,12,opt,name=storeId,proto3" json:"storeId,omitempty"`
	DiskPath    string    `protobuf:"bytes,15,opt,name=DiskPath,proto3" json:"DiskPath,omitempty"`
	Unsealed    string    `protobuf:"bytes,20,opt,name=Unsealed,proto3" json:"Unsealed,omitempty"`
	Sealed      string    `protobuf:"bytes,30,opt,name=Sealed,proto3" json:"Sealed,omitempty"`
	Cache       string    `protobuf:"bytes,40,opt,name=Cache,proto3" json:"Cache,omitempty"`
	Update      string    `protobuf:"bytes,50,opt,name=Update,proto3" json:"Update,omitempty"`
	UpdateCache string    `protobuf:"bytes,60,opt,name=UpdateCache,proto3" json:"UpdateCache,omitempty"`
}

func (x *SectorPath) Reset() {
	*x = SectorPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorPath) ProtoMessage() {}

func (x *SectorPath) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorPath.ProtoReflect.Descriptor instead.
func (*SectorPath) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{48}
}

func (x *SectorPath) GetId() *SectorID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SectorPath) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *SectorPath) GetDiskPath() string {
	if x != nil {
		return x.DiskPath
	}
	return ""
}

func (x *SectorPath) GetUnsealed() string {
	if x != nil {
		return x.Unsealed
	}
	return ""
}

func (x *SectorPath) GetSealed() string {
	if x != nil {
		return x.Sealed
	}
	return ""
}

func (x *SectorPath) GetCache() string {
	if x != nil {
		return x.Cache
	}
	return ""
}

func (x *SectorPath) GetUpdate() string {
	if x != nil {
		return x.Update
	}
	return ""
}

func (x *SectorPath) GetUpdateCache() string {
	if x != nil {
		return x.UpdateCache
	}
	return ""
}

type SectorCID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sector *SectorID `protobuf:"bytes,10,opt,name=sector,proto3" json:"sector,omitempty"`
	Cid    string    `protobuf:"bytes,20,opt,name=cid,proto3" json:"cid,omitempty"`
	Status string    `protobuf:"bytes,30,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SectorCID) Reset() {
	*x = SectorCID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorCID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorCID) ProtoMessage() {}

func (x *SectorCID) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorCID.ProtoReflect.Descriptor instead.
func (*SectorCID) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{49}
}

func (x *SectorCID) GetSector() *SectorID {
	if x != nil {
		return x.Sector
	}
	return nil
}

func (x *SectorCID) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *SectorCID) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type LotusHeightInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64 `protobuf:"varint,20,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *LotusHeightInfo) Reset() {
	*x = LotusHeightInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotusHeightInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotusHeightInfo) ProtoMessage() {}

func (x *LotusHeightInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotusHeightInfo.ProtoReflect.Descriptor instead.
func (*LotusHeightInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{50}
}

func (x *LotusHeightInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type HostPatrolInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostClassify  int64  `protobuf:"varint,1,opt,name=HostClassify,proto3" json:"HostClassify,omitempty"`
	HostUUID      string `protobuf:"bytes,2,opt,name=HostUUID,proto3" json:"HostUUID,omitempty"`
	PatrolMode    int64  `protobuf:"varint,3,opt,name=PatrolMode,proto3" json:"PatrolMode,omitempty"`
	PatrolBeginAt int64  `protobuf:"varint,4,opt,name=PatrolBeginAt,proto3" json:"PatrolBeginAt,omitempty"`
	PatrolHostIP  string `protobuf:"bytes,5,opt,name=PatrolHostIP,proto3" json:"PatrolHostIP,omitempty"`
}

func (x *HostPatrolInfo) Reset() {
	*x = HostPatrolInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostPatrolInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostPatrolInfo) ProtoMessage() {}

func (x *HostPatrolInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostPatrolInfo.ProtoReflect.Descriptor instead.
func (*HostPatrolInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{51}
}

func (x *HostPatrolInfo) GetHostClassify() int64 {
	if x != nil {
		return x.HostClassify
	}
	return 0
}

func (x *HostPatrolInfo) GetHostUUID() string {
	if x != nil {
		return x.HostUUID
	}
	return ""
}

func (x *HostPatrolInfo) GetPatrolMode() int64 {
	if x != nil {
		return x.PatrolMode
	}
	return 0
}

func (x *HostPatrolInfo) GetPatrolBeginAt() int64 {
	if x != nil {
		return x.PatrolBeginAt
	}
	return 0
}

func (x *HostPatrolInfo) GetPatrolHostIP() string {
	if x != nil {
		return x.PatrolHostIP
	}
	return ""
}

type CloseHostTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	HostUUID        string `protobuf:"bytes,2,opt,name=HostUUID,proto3" json:"HostUUID,omitempty"`
	TestType        int64  `protobuf:"varint,3,opt,name=TestType,proto3" json:"TestType,omitempty"`
	SelectHostUUIDs string `protobuf:"bytes,4,opt,name=SelectHostUUIDs,proto3" json:"SelectHostUUIDs,omitempty"`
}

func (x *CloseHostTest) Reset() {
	*x = CloseHostTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseHostTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseHostTest) ProtoMessage() {}

func (x *CloseHostTest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseHostTest.ProtoReflect.Descriptor instead.
func (*CloseHostTest) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{52}
}

func (x *CloseHostTest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CloseHostTest) GetHostUUID() string {
	if x != nil {
		return x.HostUUID
	}
	return ""
}

func (x *CloseHostTest) GetTestType() int64 {
	if x != nil {
		return x.TestType
	}
	return 0
}

func (x *CloseHostTest) GetSelectHostUUIDs() string {
	if x != nil {
		return x.SelectHostUUIDs
	}
	return ""
}

type RestartHostTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	HostUUID     string `protobuf:"bytes,2,opt,name=HostUUID,proto3" json:"HostUUID,omitempty"`
	TestBeginAt  int64  `protobuf:"varint,3,opt,name=TestBeginAt,proto3" json:"TestBeginAt,omitempty"`
	HostClassify int64  `protobuf:"varint,4,opt,name=HostClassify,proto3" json:"HostClassify,omitempty"`
}

func (x *RestartHostTest) Reset() {
	*x = RestartHostTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartHostTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartHostTest) ProtoMessage() {}

func (x *RestartHostTest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartHostTest.ProtoReflect.Descriptor instead.
func (*RestartHostTest) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{53}
}

func (x *RestartHostTest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *RestartHostTest) GetHostUUID() string {
	if x != nil {
		return x.HostUUID
	}
	return ""
}

func (x *RestartHostTest) GetTestBeginAt() int64 {
	if x != nil {
		return x.TestBeginAt
	}
	return 0
}

func (x *RestartHostTest) GetHostClassify() int64 {
	if x != nil {
		return x.HostClassify
	}
	return 0
}

type FileManage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,10,opt,name=Id,proto3" json:"Id,omitempty"`
	FileSize int64 `protobuf:"varint,20,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
}

func (x *FileManage) Reset() {
	*x = FileManage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileManage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileManage) ProtoMessage() {}

func (x *FileManage) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileManage.ProtoReflect.Descriptor instead.
func (*FileManage) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{54}
}

func (x *FileManage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileManage) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type OpHardwareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostClassify int64  `protobuf:"varint,1,opt,name=HostClassify,proto3" json:"HostClassify,omitempty"`
	HostUUID     string `protobuf:"bytes,2,opt,name=HostUUID,proto3" json:"HostUUID,omitempty"`
}

func (x *OpHardwareInfo) Reset() {
	*x = OpHardwareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpHardwareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpHardwareInfo) ProtoMessage() {}

func (x *OpHardwareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpHardwareInfo.ProtoReflect.Descriptor instead.
func (*OpHardwareInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{55}
}

func (x *OpHardwareInfo) GetHostClassify() int64 {
	if x != nil {
		return x.HostClassify
	}
	return 0
}

func (x *OpHardwareInfo) GetHostUUID() string {
	if x != nil {
		return x.HostUUID
	}
	return ""
}

type SectorRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *SectorID `protobuf:"bytes,10,opt,name=Id,proto3" json:"Id,omitempty"`
	ProofType uint64    `protobuf:"varint,20,opt,name=ProofType,proto3" json:"ProofType,omitempty"`
	PreAfter  bool      `protobuf:"varint,30,opt,name=preAfter,proto3" json:"preAfter,omitempty"`
	OpId      string    `protobuf:"bytes,50,opt,name=opId,proto3" json:"opId,omitempty"`
}

func (x *SectorRef) Reset() {
	*x = SectorRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorRef) ProtoMessage() {}

func (x *SectorRef) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorRef.ProtoReflect.Descriptor instead.
func (*SectorRef) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{56}
}

func (x *SectorRef) GetId() *SectorID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SectorRef) GetProofType() uint64 {
	if x != nil {
		return x.ProofType
	}
	return 0
}

func (x *SectorRef) GetPreAfter() bool {
	if x != nil {
		return x.PreAfter
	}
	return false
}

func (x *SectorRef) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

type SealerParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sector          *SectorRef `protobuf:"bytes,10,opt,name=Sector,proto3" json:"Sector,omitempty"`
	Phase1Out       []byte     `protobuf:"bytes,20,opt,name=Phase1Out,proto3" json:"Phase1Out,omitempty"`
	Status          uint64     `protobuf:"varint,30,opt,name=Status,proto3" json:"Status,omitempty"`
	OpId            string     `protobuf:"bytes,50,opt,name=opId,proto3" json:"opId,omitempty"`
	OpC2Id          string     `protobuf:"bytes,60,opt,name=opC2Id,proto3" json:"opC2Id,omitempty"`
	Host            string     `protobuf:"bytes,70,opt,name=Host,proto3" json:"Host,omitempty"`
	OpMainDisk      string     `protobuf:"bytes,80,opt,name=OpMainDisk,proto3" json:"OpMainDisk,omitempty"`
	GateWayMainDisk string     `protobuf:"bytes,90,opt,name=GateWayMainDisk,proto3" json:"GateWayMainDisk,omitempty"`
	SealPort        string     `protobuf:"bytes,100,opt,name=SealPort,proto3" json:"SealPort,omitempty"`
}

func (x *SealerParam) Reset() {
	*x = SealerParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SealerParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SealerParam) ProtoMessage() {}

func (x *SealerParam) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SealerParam.ProtoReflect.Descriptor instead.
func (*SealerParam) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{57}
}

func (x *SealerParam) GetSector() *SectorRef {
	if x != nil {
		return x.Sector
	}
	return nil
}

func (x *SealerParam) GetPhase1Out() []byte {
	if x != nil {
		return x.Phase1Out
	}
	return nil
}

func (x *SealerParam) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SealerParam) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *SealerParam) GetOpC2Id() string {
	if x != nil {
		return x.OpC2Id
	}
	return ""
}

func (x *SealerParam) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SealerParam) GetOpMainDisk() string {
	if x != nil {
		return x.OpMainDisk
	}
	return ""
}

func (x *SealerParam) GetGateWayMainDisk() string {
	if x != nil {
		return x.GateWayMainDisk
	}
	return ""
}

func (x *SealerParam) GetSealPort() string {
	if x != nil {
		return x.SealPort
	}
	return ""
}

type FileDirInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId        string `protobuf:"bytes,10,opt,name=OpId,proto3" json:"OpId,omitempty"`
	FileDirPath string `protobuf:"bytes,20,opt,name=FileDirPath,proto3" json:"FileDirPath,omitempty"`
}

func (x *FileDirInfo) Reset() {
	*x = FileDirInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDirInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDirInfo) ProtoMessage() {}

func (x *FileDirInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDirInfo.ProtoReflect.Descriptor instead.
func (*FileDirInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{58}
}

func (x *FileDirInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *FileDirInfo) GetFileDirPath() string {
	if x != nil {
		return x.FileDirPath
	}
	return ""
}

type OpC2Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpInfo []*OpInfo `protobuf:"bytes,10,rep,name=opInfo,proto3" json:"opInfo,omitempty"`
}

func (x *OpC2Client) Reset() {
	*x = OpC2Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpC2Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpC2Client) ProtoMessage() {}

func (x *OpC2Client) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpC2Client.ProtoReflect.Descriptor instead.
func (*OpC2Client) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{59}
}

func (x *OpC2Client) GetOpInfo() []*OpInfo {
	if x != nil {
		return x.OpInfo
	}
	return nil
}

type OpHostUUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostUUID string `protobuf:"bytes,1,opt,name=HostUUID,proto3" json:"HostUUID,omitempty"`
	HostType string `protobuf:"bytes,2,opt,name=HostType,proto3" json:"HostType,omitempty"`
}

func (x *OpHostUUID) Reset() {
	*x = OpHostUUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpHostUUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpHostUUID) ProtoMessage() {}

func (x *OpHostUUID) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpHostUUID.ProtoReflect.Descriptor instead.
func (*OpHostUUID) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{60}
}

func (x *OpHostUUID) GetHostUUID() string {
	if x != nil {
		return x.HostUUID
	}
	return ""
}

func (x *OpHostUUID) GetHostType() string {
	if x != nil {
		return x.HostType
	}
	return ""
}

type HostGroupArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsGroupArray bool `protobuf:"varint,1,opt,name=IsGroupArray,proto3" json:"IsGroupArray,omitempty"`
}

func (x *HostGroupArray) Reset() {
	*x = HostGroupArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGroupArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGroupArray) ProtoMessage() {}

func (x *HostGroupArray) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGroupArray.ProtoReflect.Descriptor instead.
func (*HostGroupArray) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{61}
}

func (x *HostGroupArray) GetIsGroupArray() bool {
	if x != nil {
		return x.IsGroupArray
	}
	return false
}

type Actor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerId string `protobuf:"bytes,10,opt,name=minerId,proto3" json:"minerId,omitempty"`
}

func (x *Actor) Reset() {
	*x = Actor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Actor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actor) ProtoMessage() {}

func (x *Actor) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actor.ProtoReflect.Descriptor instead.
func (*Actor) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{62}
}

func (x *Actor) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

type QueryParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param      string `protobuf:"bytes,20,opt,name=param,proto3" json:"param,omitempty"`
	LotusIp    string `protobuf:"bytes,30,opt,name=lotusIp,proto3" json:"lotusIp,omitempty"`
	LotusToken string `protobuf:"bytes,32,opt,name=lotusToken,proto3" json:"lotusToken,omitempty"`
}

func (x *QueryParam) Reset() {
	*x = QueryParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryParam) ProtoMessage() {}

func (x *QueryParam) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryParam.ProtoReflect.Descriptor instead.
func (*QueryParam) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{63}
}

func (x *QueryParam) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *QueryParam) GetLotusIp() string {
	if x != nil {
		return x.LotusIp
	}
	return ""
}

func (x *QueryParam) GetLotusToken() string {
	if x != nil {
		return x.LotusToken
	}
	return ""
}

type SectorRefTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *SectorID `protobuf:"bytes,10,opt,name=Id,proto3" json:"Id,omitempty"`
	ProofType       uint64    `protobuf:"varint,20,opt,name=ProofType,proto3" json:"ProofType,omitempty"`
	Ticket          []byte    `protobuf:"bytes,60,opt,name=Ticket,proto3" json:"Ticket,omitempty"`
	SectorSize      uint64    `protobuf:"varint,80,opt,name=SectorSize,proto3" json:"SectorSize,omitempty"`
	TaskDetailId    uint64    `protobuf:"varint,90,opt,name=TaskDetailId,proto3" json:"TaskDetailId,omitempty"`
	SectorRecoverId uint64    `protobuf:"varint,100,opt,name=SectorRecoverId,proto3" json:"SectorRecoverId,omitempty"`
	PieceCid        string    `protobuf:"bytes,110,opt,name=PieceCid,proto3" json:"PieceCid,omitempty"`
	PieceSize       int64     `protobuf:"varint,120,opt,name=PieceSize,proto3" json:"PieceSize,omitempty"`
}

func (x *SectorRefTask) Reset() {
	*x = SectorRefTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorRefTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorRefTask) ProtoMessage() {}

func (x *SectorRefTask) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorRefTask.ProtoReflect.Descriptor instead.
func (*SectorRefTask) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{64}
}

func (x *SectorRefTask) GetId() *SectorID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SectorRefTask) GetProofType() uint64 {
	if x != nil {
		return x.ProofType
	}
	return 0
}

func (x *SectorRefTask) GetTicket() []byte {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *SectorRefTask) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *SectorRefTask) GetTaskDetailId() uint64 {
	if x != nil {
		return x.TaskDetailId
	}
	return 0
}

func (x *SectorRefTask) GetSectorRecoverId() uint64 {
	if x != nil {
		return x.SectorRecoverId
	}
	return 0
}

func (x *SectorRefTask) GetPieceCid() string {
	if x != nil {
		return x.PieceCid
	}
	return ""
}

func (x *SectorRefTask) GetPieceSize() int64 {
	if x != nil {
		return x.PieceSize
	}
	return 0
}

type SectorsTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectorRefTask     []*SectorRefTask `protobuf:"bytes,10,rep,name=sectorRefTask,proto3" json:"sectorRefTask,omitempty"`
	WorkerTaskNum     uint64           `protobuf:"varint,20,opt,name=WorkerTaskNum,proto3" json:"WorkerTaskNum,omitempty"`
	SectorType        uint64           `protobuf:"varint,30,opt,name=SectorType,proto3" json:"SectorType,omitempty"`
	SectorSize        uint64           `protobuf:"varint,50,opt,name=SectorSize,proto3" json:"SectorSize,omitempty"`
	WorkerOpId        string           `protobuf:"bytes,90,opt,name=WorkerOpId,proto3" json:"WorkerOpId,omitempty"`
	WorkerOpIp        string           `protobuf:"bytes,100,opt,name=WorkerOpIp,proto3" json:"WorkerOpIp,omitempty"`
	WorkerOpPort      string           `protobuf:"bytes,110,opt,name=WorkerOpPort,proto3" json:"WorkerOpPort,omitempty"`
	StorageOpIp       string           `protobuf:"bytes,60,opt,name=StorageOpIp,proto3" json:"StorageOpIp,omitempty"`
	OriginalValueOpId string           `protobuf:"bytes,70,opt,name=OriginalValueOpId,proto3" json:"OriginalValueOpId,omitempty"`
	OriginalValueDir  string           `protobuf:"bytes,80,opt,name=OriginalValueDir,proto3" json:"OriginalValueDir,omitempty"`
	FileInfo          []*FileInfo      `protobuf:"bytes,120,rep,name=fileInfo,proto3" json:"fileInfo,omitempty"`
}

func (x *SectorsTask) Reset() {
	*x = SectorsTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorsTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorsTask) ProtoMessage() {}

func (x *SectorsTask) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorsTask.ProtoReflect.Descriptor instead.
func (*SectorsTask) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{65}
}

func (x *SectorsTask) GetSectorRefTask() []*SectorRefTask {
	if x != nil {
		return x.SectorRefTask
	}
	return nil
}

func (x *SectorsTask) GetWorkerTaskNum() uint64 {
	if x != nil {
		return x.WorkerTaskNum
	}
	return 0
}

func (x *SectorsTask) GetSectorType() uint64 {
	if x != nil {
		return x.SectorType
	}
	return 0
}

func (x *SectorsTask) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *SectorsTask) GetWorkerOpId() string {
	if x != nil {
		return x.WorkerOpId
	}
	return ""
}

func (x *SectorsTask) GetWorkerOpIp() string {
	if x != nil {
		return x.WorkerOpIp
	}
	return ""
}

func (x *SectorsTask) GetWorkerOpPort() string {
	if x != nil {
		return x.WorkerOpPort
	}
	return ""
}

func (x *SectorsTask) GetStorageOpIp() string {
	if x != nil {
		return x.StorageOpIp
	}
	return ""
}

func (x *SectorsTask) GetOriginalValueOpId() string {
	if x != nil {
		return x.OriginalValueOpId
	}
	return ""
}

func (x *SectorsTask) GetOriginalValueDir() string {
	if x != nil {
		return x.OriginalValueDir
	}
	return ""
}

func (x *SectorsTask) GetFileInfo() []*FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type DirFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId     string `protobuf:"bytes,10,opt,name=OpId,proto3" json:"OpId,omitempty"`
	Path     string `protobuf:"bytes,20,opt,name=Path,proto3" json:"Path,omitempty"`
	FileName string `protobuf:"bytes,30,opt,name=FileName,proto3" json:"FileName,omitempty"`
}

func (x *DirFileReq) Reset() {
	*x = DirFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirFileReq) ProtoMessage() {}

func (x *DirFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirFileReq.ProtoReflect.Descriptor instead.
func (*DirFileReq) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{66}
}

func (x *DirFileReq) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *DirFileReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DirFileReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type ResDirFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirFile []*DirFile `protobuf:"bytes,10,rep,name=dirFile,proto3" json:"dirFile,omitempty"`
}

func (x *ResDirFile) Reset() {
	*x = ResDirFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDirFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDirFile) ProtoMessage() {}

func (x *ResDirFile) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDirFile.ProtoReflect.Descriptor instead.
func (*ResDirFile) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{67}
}

func (x *ResDirFile) GetDirFile() []*DirFile {
	if x != nil {
		return x.DirFile
	}
	return nil
}

type DirFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string `protobuf:"bytes,10,opt,name=Path,proto3" json:"Path,omitempty"`
	FileNum uint64 `protobuf:"varint,20,opt,name=FileNum,proto3" json:"FileNum,omitempty"`
}

func (x *DirFile) Reset() {
	*x = DirFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirFile) ProtoMessage() {}

func (x *DirFile) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirFile.ProtoReflect.Descriptor instead.
func (*DirFile) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{68}
}

func (x *DirFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DirFile) GetFileNum() uint64 {
	if x != nil {
		return x.FileNum
	}
	return 0
}

type FilParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`
	Ip    string `protobuf:"bytes,20,opt,name=ip,proto3" json:"ip,omitempty"`
	Param string `protobuf:"bytes,30,opt,name=param,proto3" json:"param,omitempty"`
	Opid  string `protobuf:"bytes,40,opt,name=opid,proto3" json:"opid,omitempty"`
}

func (x *FilParam) Reset() {
	*x = FilParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilParam) ProtoMessage() {}

func (x *FilParam) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilParam.ProtoReflect.Descriptor instead.
func (*FilParam) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{69}
}

func (x *FilParam) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FilParam) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *FilParam) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *FilParam) GetOpid() string {
	if x != nil {
		return x.Opid
	}
	return ""
}

type SectorActorID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`
	Ip     string `protobuf:"bytes,20,opt,name=ip,proto3" json:"ip,omitempty"`
	Miner  uint64 `protobuf:"varint,30,opt,name=miner,proto3" json:"miner,omitempty"`
	Number uint64 `protobuf:"varint,40,opt,name=Number,proto3" json:"Number,omitempty"`
}

func (x *SectorActorID) Reset() {
	*x = SectorActorID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorActorID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorActorID) ProtoMessage() {}

func (x *SectorActorID) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorActorID.ProtoReflect.Descriptor instead.
func (*SectorActorID) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{70}
}

func (x *SectorActorID) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SectorActorID) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SectorActorID) GetMiner() uint64 {
	if x != nil {
		return x.Miner
	}
	return 0
}

func (x *SectorActorID) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type LinkList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Links       []*FilParam `protobuf:"bytes,10,rep,name=Links,proto3" json:"Links,omitempty"`
	StorageType int32       `protobuf:"varint,20,opt,name=storageType,proto3" json:"storageType,omitempty"` //1NFS,0worker
}

func (x *LinkList) Reset() {
	*x = LinkList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkList) ProtoMessage() {}

func (x *LinkList) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkList.ProtoReflect.Descriptor instead.
func (*LinkList) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{71}
}

func (x *LinkList) GetLinks() []*FilParam {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *LinkList) GetStorageType() int32 {
	if x != nil {
		return x.StorageType
	}
	return 0
}

type ActorWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner   string   `protobuf:"bytes,10,opt,name=owner,proto3" json:"owner,omitempty"`
	Worker  string   `protobuf:"bytes,20,opt,name=worker,proto3" json:"worker,omitempty"`
	Control []string `protobuf:"bytes,30,rep,name=control,proto3" json:"control,omitempty"`
}

func (x *ActorWallet) Reset() {
	*x = ActorWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorWallet) ProtoMessage() {}

func (x *ActorWallet) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorWallet.ProtoReflect.Descriptor instead.
func (*ActorWallet) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{72}
}

func (x *ActorWallet) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ActorWallet) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

func (x *ActorWallet) GetControl() []string {
	if x != nil {
		return x.Control
	}
	return nil
}

type TaskCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TCount int32  `protobuf:"varint,10,opt,name=TCount,proto3" json:"TCount,omitempty"`
	TType  string `protobuf:"bytes,20,opt,name=TType,proto3" json:"TType,omitempty"`
}

func (x *TaskCount) Reset() {
	*x = TaskCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCount) ProtoMessage() {}

func (x *TaskCount) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCount.ProtoReflect.Descriptor instead.
func (*TaskCount) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{73}
}

func (x *TaskCount) GetTCount() int32 {
	if x != nil {
		return x.TCount
	}
	return 0
}

func (x *TaskCount) GetTType() string {
	if x != nil {
		return x.TType
	}
	return ""
}

type OpTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId  string `protobuf:"bytes,10,opt,name=OpId,proto3" json:"OpId,omitempty"`
	TType string `protobuf:"bytes,20,opt,name=TType,proto3" json:"TType,omitempty"`
}

func (x *OpTask) Reset() {
	*x = OpTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpTask) ProtoMessage() {}

func (x *OpTask) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpTask.ProtoReflect.Descriptor instead.
func (*OpTask) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{74}
}

func (x *OpTask) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *OpTask) GetTType() string {
	if x != nil {
		return x.TType
	}
	return ""
}

type TaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip         string `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip,omitempty"`
	OpId       string `protobuf:"bytes,10,opt,name=opId,proto3" json:"opId,omitempty"`
	TType      string `protobuf:"bytes,20,opt,name=TType,proto3" json:"TType,omitempty"`
	Progress   int32  `protobuf:"varint,30,opt,name=progress,proto3" json:"progress,omitempty"`
	MinerId    string `protobuf:"bytes,40,opt,name=minerId,proto3" json:"minerId,omitempty"`
	TimeLength string `protobuf:"bytes,50,opt,name=timeLength,proto3" json:"timeLength,omitempty"`
	SectorId   uint64 `protobuf:"varint,60,opt,name=sectorId,proto3" json:"sectorId,omitempty"`
	SectorSize uint64 `protobuf:"varint,70,opt,name=sectorSize,proto3" json:"sectorSize,omitempty"`
}

func (x *TaskInfo) Reset() {
	*x = TaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInfo) ProtoMessage() {}

func (x *TaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInfo.ProtoReflect.Descriptor instead.
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{75}
}

func (x *TaskInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *TaskInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *TaskInfo) GetTType() string {
	if x != nil {
		return x.TType
	}
	return ""
}

func (x *TaskInfo) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *TaskInfo) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *TaskInfo) GetTimeLength() string {
	if x != nil {
		return x.TimeLength
	}
	return ""
}

func (x *TaskInfo) GetSectorId() uint64 {
	if x != nil {
		return x.SectorId
	}
	return 0
}

func (x *TaskInfo) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

type TaskInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*TaskInfo `protobuf:"bytes,20,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *TaskInfoList) Reset() {
	*x = TaskInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInfoList) ProtoMessage() {}

func (x *TaskInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInfoList.ProtoReflect.Descriptor instead.
func (*TaskInfoList) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{76}
}

func (x *TaskInfoList) GetTasks() []*TaskInfo {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type TaskQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queues []*TaskQueue `protobuf:"bytes,10,rep,name=queues,proto3" json:"queues,omitempty"`
}

func (x *TaskQueues) Reset() {
	*x = TaskQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueues) ProtoMessage() {}

func (x *TaskQueues) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueues.ProtoReflect.Descriptor instead.
func (*TaskQueues) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{77}
}

func (x *TaskQueues) GetQueues() []*TaskQueue {
	if x != nil {
		return x.Queues
	}
	return nil
}

type TaskQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               uint64 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	RunCount         int32  `protobuf:"varint,20,opt,name=runCount,proto3" json:"runCount,omitempty"`
	CompleteCount    int32  `protobuf:"varint,30,opt,name=completeCount,proto3" json:"completeCount,omitempty"`
	JobTotal         int32  `protobuf:"varint,40,opt,name=jobTotal,proto3" json:"jobTotal,omitempty"`
	SectorType       int32  `protobuf:"varint,50,opt,name=sectorType,proto3" json:"sectorType,omitempty"`
	Actor            string `protobuf:"bytes,59,opt,name=actor,proto3" json:"actor,omitempty"`
	MinerToken       string `protobuf:"bytes,60,opt,name=minerToken,proto3" json:"minerToken,omitempty"`
	MinerIp          string `protobuf:"bytes,70,opt,name=minerIp,proto3" json:"minerIp,omitempty"`
	ConcurrentImport int32  `protobuf:"varint,80,opt,name=concurrentImport,proto3" json:"concurrentImport,omitempty"`
}

func (x *TaskQueue) Reset() {
	*x = TaskQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueue) ProtoMessage() {}

func (x *TaskQueue) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueue.ProtoReflect.Descriptor instead.
func (*TaskQueue) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{78}
}

func (x *TaskQueue) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TaskQueue) GetRunCount() int32 {
	if x != nil {
		return x.RunCount
	}
	return 0
}

func (x *TaskQueue) GetCompleteCount() int32 {
	if x != nil {
		return x.CompleteCount
	}
	return 0
}

func (x *TaskQueue) GetJobTotal() int32 {
	if x != nil {
		return x.JobTotal
	}
	return 0
}

func (x *TaskQueue) GetSectorType() int32 {
	if x != nil {
		return x.SectorType
	}
	return 0
}

func (x *TaskQueue) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *TaskQueue) GetMinerToken() string {
	if x != nil {
		return x.MinerToken
	}
	return ""
}

func (x *TaskQueue) GetMinerIp() string {
	if x != nil {
		return x.MinerIp
	}
	return ""
}

func (x *TaskQueue) GetConcurrentImport() int32 {
	if x != nil {
		return x.ConcurrentImport
	}
	return 0
}

type OpFilePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip         string `protobuf:"bytes,10,opt,name=Ip,proto3" json:"Ip,omitempty"`
	SectorSize uint64 `protobuf:"varint,20,opt,name=SectorSize,proto3" json:"SectorSize,omitempty"`
}

func (x *OpFilePath) Reset() {
	*x = OpFilePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpFilePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpFilePath) ProtoMessage() {}

func (x *OpFilePath) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpFilePath.ProtoReflect.Descriptor instead.
func (*OpFilePath) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{79}
}

func (x *OpFilePath) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *OpFilePath) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

type TaskStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskDetailId    uint64 `protobuf:"varint,10,opt,name=TaskDetailId,proto3" json:"TaskDetailId,omitempty"`
	SectorRecoverId uint64 `protobuf:"varint,20,opt,name=SectorRecoverId,proto3" json:"SectorRecoverId,omitempty"`
	Status          uint64 `protobuf:"varint,30,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *TaskStatus) Reset() {
	*x = TaskStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatus) ProtoMessage() {}

func (x *TaskStatus) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatus.ProtoReflect.Descriptor instead.
func (*TaskStatus) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{80}
}

func (x *TaskStatus) GetTaskDetailId() uint64 {
	if x != nil {
		return x.TaskDetailId
	}
	return 0
}

func (x *TaskStatus) GetSectorRecoverId() uint64 {
	if x != nil {
		return x.SectorRecoverId
	}
	return 0
}

func (x *TaskStatus) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type BadSectorId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerId       string `protobuf:"bytes,10,opt,name=MinerId,proto3" json:"MinerId,omitempty"`
	SectorId      uint64 `protobuf:"varint,20,opt,name=SectorId,proto3" json:"SectorId,omitempty"`
	SectorSize    uint64 `protobuf:"varint,30,opt,name=SectorSize,proto3" json:"SectorSize,omitempty"`
	SectorType    uint64 `protobuf:"varint,40,opt,name=SectorType,proto3" json:"SectorType,omitempty"`
	BelongingNode string `protobuf:"bytes,50,opt,name=BelongingNode,proto3" json:"BelongingNode,omitempty"`
	SectorAddress string `protobuf:"bytes,60,opt,name=SectorAddress,proto3" json:"SectorAddress,omitempty"`
	AddType       uint64 `protobuf:"varint,80,opt,name=AddType,proto3" json:"AddType,omitempty"`
}

func (x *BadSectorId) Reset() {
	*x = BadSectorId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadSectorId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadSectorId) ProtoMessage() {}

func (x *BadSectorId) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadSectorId.ProtoReflect.Descriptor instead.
func (*BadSectorId) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{81}
}

func (x *BadSectorId) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *BadSectorId) GetSectorId() uint64 {
	if x != nil {
		return x.SectorId
	}
	return 0
}

func (x *BadSectorId) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *BadSectorId) GetSectorType() uint64 {
	if x != nil {
		return x.SectorType
	}
	return 0
}

func (x *BadSectorId) GetBelongingNode() string {
	if x != nil {
		return x.BelongingNode
	}
	return ""
}

func (x *BadSectorId) GetSectorAddress() string {
	if x != nil {
		return x.SectorAddress
	}
	return ""
}

func (x *BadSectorId) GetAddType() uint64 {
	if x != nil {
		return x.AddType
	}
	return 0
}

type PledgeParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsManage bool        `protobuf:"varint,10,opt,name=isManage,proto3" json:"isManage,omitempty"`
	Actor    string      `protobuf:"bytes,20,opt,name=actor,proto3" json:"actor,omitempty"`
	ApCount  int32       `protobuf:"varint,30,opt,name=apCount,proto3" json:"apCount,omitempty"`
	Info     *OpenWindow `protobuf:"bytes,40,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *PledgeParam) Reset() {
	*x = PledgeParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PledgeParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PledgeParam) ProtoMessage() {}

func (x *PledgeParam) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PledgeParam.ProtoReflect.Descriptor instead.
func (*PledgeParam) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{82}
}

func (x *PledgeParam) GetIsManage() bool {
	if x != nil {
		return x.IsManage
	}
	return false
}

func (x *PledgeParam) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *PledgeParam) GetApCount() int32 {
	if x != nil {
		return x.ApCount
	}
	return 0
}

func (x *PledgeParam) GetInfo() *OpenWindow {
	if x != nil {
		return x.Info
	}
	return nil
}

type SectorQueueDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid          *SectorID `protobuf:"bytes,10,opt,name=sid,proto3" json:"sid,omitempty"`
	RunIndex     int32     `protobuf:"varint,20,opt,name=runIndex,proto3" json:"runIndex,omitempty"`
	QueueId      uint64    `protobuf:"varint,21,opt,name=queueId,proto3" json:"queueId,omitempty"`
	SectorStatus int32     `protobuf:"varint,30,opt,name=sectorStatus,proto3" json:"sectorStatus,omitempty"`
}

func (x *SectorQueueDetail) Reset() {
	*x = SectorQueueDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorQueueDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorQueueDetail) ProtoMessage() {}

func (x *SectorQueueDetail) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorQueueDetail.ProtoReflect.Descriptor instead.
func (*SectorQueueDetail) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{83}
}

func (x *SectorQueueDetail) GetSid() *SectorID {
	if x != nil {
		return x.Sid
	}
	return nil
}

func (x *SectorQueueDetail) GetRunIndex() int32 {
	if x != nil {
		return x.RunIndex
	}
	return 0
}

func (x *SectorQueueDetail) GetQueueId() uint64 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *SectorQueueDetail) GetSectorStatus() int32 {
	if x != nil {
		return x.SectorStatus
	}
	return 0
}

type CarFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId     string `protobuf:"bytes,10,opt,name=OpId,proto3" json:"OpId,omitempty"`
	Path     string `protobuf:"bytes,20,opt,name=Path,proto3" json:"Path,omitempty"`
	FileName string `protobuf:"bytes,30,opt,name=FileName,proto3" json:"FileName,omitempty"`
}

func (x *CarFile) Reset() {
	*x = CarFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarFile) ProtoMessage() {}

func (x *CarFile) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarFile.ProtoReflect.Descriptor instead.
func (*CarFile) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{84}
}

func (x *CarFile) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *CarFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CarFile) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type CarArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarInfo []*CarInfo `protobuf:"bytes,10,rep,name=carInfo,proto3" json:"carInfo,omitempty"`
}

func (x *CarArray) Reset() {
	*x = CarArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarArray) ProtoMessage() {}

func (x *CarArray) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarArray.ProtoReflect.Descriptor instead.
func (*CarArray) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{85}
}

func (x *CarArray) GetCarInfo() []*CarInfo {
	if x != nil {
		return x.CarInfo
	}
	return nil
}

type CarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName  string `protobuf:"bytes,10,opt,name=FileName,proto3" json:"FileName,omitempty"`
	PieceCid  string `protobuf:"bytes,20,opt,name=PieceCid,proto3" json:"PieceCid,omitempty"`
	PieceSize int64  `protobuf:"varint,30,opt,name=PieceSize,proto3" json:"PieceSize,omitempty"`
	FileStr   string `protobuf:"bytes,40,opt,name=FileStr,proto3" json:"FileStr,omitempty"`
	InPutDir  string `protobuf:"bytes,50,opt,name=InPutDir,proto3" json:"InPutDir,omitempty"`
	CarSize   int64  `protobuf:"varint,60,opt,name=CarSize,proto3" json:"CarSize,omitempty"`
	DataCid   string `protobuf:"bytes,70,opt,name=DataCid,proto3" json:"DataCid,omitempty"`
}

func (x *CarInfo) Reset() {
	*x = CarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarInfo) ProtoMessage() {}

func (x *CarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarInfo.ProtoReflect.Descriptor instead.
func (*CarInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{86}
}

func (x *CarInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CarInfo) GetPieceCid() string {
	if x != nil {
		return x.PieceCid
	}
	return ""
}

func (x *CarInfo) GetPieceSize() int64 {
	if x != nil {
		return x.PieceSize
	}
	return 0
}

func (x *CarInfo) GetFileStr() string {
	if x != nil {
		return x.FileStr
	}
	return ""
}

func (x *CarInfo) GetInPutDir() string {
	if x != nil {
		return x.InPutDir
	}
	return ""
}

func (x *CarInfo) GetCarSize() int64 {
	if x != nil {
		return x.CarSize
	}
	return 0
}

func (x *CarInfo) GetDataCid() string {
	if x != nil {
		return x.DataCid
	}
	return ""
}

type DealParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId uint64 `protobuf:"varint,10,opt,name=queueId,proto3" json:"queueId,omitempty"`
	Actor   string `protobuf:"bytes,20,opt,name=actor,proto3" json:"actor,omitempty"`
	Count   int32  `protobuf:"varint,30,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DealParam) Reset() {
	*x = DealParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealParam) ProtoMessage() {}

func (x *DealParam) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealParam.ProtoReflect.Descriptor instead.
func (*DealParam) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{87}
}

func (x *DealParam) GetQueueId() uint64 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *DealParam) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *DealParam) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DealInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	CarOpId  string `protobuf:"bytes,20,opt,name=carOpId,proto3" json:"carOpId,omitempty"`
	CarPath  string `protobuf:"bytes,30,opt,name=carPath,proto3" json:"carPath,omitempty"`
	DealUuid string `protobuf:"bytes,40,opt,name=dealUuid,proto3" json:"dealUuid,omitempty"`
	PieceCid string `protobuf:"bytes,50,opt,name=pieceCid,proto3" json:"pieceCid,omitempty"`
}

func (x *DealInfo) Reset() {
	*x = DealInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealInfo) ProtoMessage() {}

func (x *DealInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealInfo.ProtoReflect.Descriptor instead.
func (*DealInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{88}
}

func (x *DealInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DealInfo) GetCarOpId() string {
	if x != nil {
		return x.CarOpId
	}
	return ""
}

func (x *DealInfo) GetCarPath() string {
	if x != nil {
		return x.CarPath
	}
	return ""
}

func (x *DealInfo) GetDealUuid() string {
	if x != nil {
		return x.DealUuid
	}
	return ""
}

func (x *DealInfo) GetPieceCid() string {
	if x != nil {
		return x.PieceCid
	}
	return ""
}

type DealList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deals []*DealInfo `protobuf:"bytes,10,rep,name=deals,proto3" json:"deals,omitempty"`
}

func (x *DealList) Reset() {
	*x = DealList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealList) ProtoMessage() {}

func (x *DealList) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealList.ProtoReflect.Descriptor instead.
func (*DealList) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{89}
}

func (x *DealList) GetDeals() []*DealInfo {
	if x != nil {
		return x.Deals
	}
	return nil
}

type EditStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	Actor  string `protobuf:"bytes,11,opt,name=actor,proto3" json:"actor,omitempty"`
	Status int32  `protobuf:"varint,20,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EditStatus) Reset() {
	*x = EditStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditStatus) ProtoMessage() {}

func (x *EditStatus) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditStatus.ProtoReflect.Descriptor instead.
func (*EditStatus) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{90}
}

func (x *EditStatus) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditStatus) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *EditStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type FileNameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GateWayId string `protobuf:"bytes,10,opt,name=GateWayId,proto3" json:"GateWayId,omitempty"`
	FileType  int64  `protobuf:"varint,20,opt,name=FileType,proto3" json:"FileType,omitempty"`
}

func (x *FileNameInfo) Reset() {
	*x = FileNameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileNameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileNameInfo) ProtoMessage() {}

func (x *FileNameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileNameInfo.ProtoReflect.Descriptor instead.
func (*FileNameInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{91}
}

func (x *FileNameInfo) GetGateWayId() string {
	if x != nil {
		return x.GateWayId
	}
	return ""
}

func (x *FileNameInfo) GetFileType() int64 {
	if x != nil {
		return x.FileType
	}
	return 0
}

type FileSynOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64      `protobuf:"varint,10,opt,name=Id,proto3" json:"Id,omitempty"`
	TimeLength int64       `protobuf:"varint,20,opt,name=TimeLength,proto3" json:"TimeLength,omitempty"`
	Enable     int64       `protobuf:"varint,30,opt,name=Enable,proto3" json:"Enable,omitempty"`
	LimitSpeed int64       `protobuf:"varint,40,opt,name=LimitSpeed,proto3" json:"LimitSpeed,omitempty"`
	FilePath   string      `protobuf:"bytes,50,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	SendType   int64       `protobuf:"varint,60,opt,name=SendType,proto3" json:"SendType,omitempty"`
	TimeOut    string      `protobuf:"bytes,80,opt,name=TimeOut,proto3" json:"TimeOut,omitempty"`
	FileInfo   []*FileInfo `protobuf:"bytes,70,rep,name=fileInfo,proto3" json:"fileInfo,omitempty"`
}

func (x *FileSynOp) Reset() {
	*x = FileSynOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSynOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSynOp) ProtoMessage() {}

func (x *FileSynOp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSynOp.ProtoReflect.Descriptor instead.
func (*FileSynOp) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{92}
}

func (x *FileSynOp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileSynOp) GetTimeLength() int64 {
	if x != nil {
		return x.TimeLength
	}
	return 0
}

func (x *FileSynOp) GetEnable() int64 {
	if x != nil {
		return x.Enable
	}
	return 0
}

func (x *FileSynOp) GetLimitSpeed() int64 {
	if x != nil {
		return x.LimitSpeed
	}
	return 0
}

func (x *FileSynOp) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileSynOp) GetSendType() int64 {
	if x != nil {
		return x.SendType
	}
	return 0
}

func (x *FileSynOp) GetTimeOut() string {
	if x != nil {
		return x.TimeOut
	}
	return ""
}

func (x *FileSynOp) GetFileInfo() []*FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type StopTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskStatus string `protobuf:"bytes,10,opt,name=TaskStatus,proto3" json:"TaskStatus,omitempty"`
	TaskTime   string `protobuf:"bytes,20,opt,name=TaskTime,proto3" json:"TaskTime,omitempty"`
}

func (x *StopTask) Reset() {
	*x = StopTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTask) ProtoMessage() {}

func (x *StopTask) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTask.ProtoReflect.Descriptor instead.
func (*StopTask) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{93}
}

func (x *StopTask) GetTaskStatus() string {
	if x != nil {
		return x.TaskStatus
	}
	return ""
}

func (x *StopTask) GetTaskTime() string {
	if x != nil {
		return x.TaskTime
	}
	return ""
}

type JobPlatform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsStop bool `protobuf:"varint,10,opt,name=IsStop,proto3" json:"IsStop,omitempty"`
}

func (x *JobPlatform) Reset() {
	*x = JobPlatform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobPlatform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobPlatform) ProtoMessage() {}

func (x *JobPlatform) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobPlatform.ProtoReflect.Descriptor instead.
func (*JobPlatform) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{94}
}

func (x *JobPlatform) GetIsStop() bool {
	if x != nil {
		return x.IsStop
	}
	return false
}

type ScriptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GateWayId  string `protobuf:"bytes,1,opt,name=GateWayId,proto3" json:"GateWayId,omitempty"`
	OpId       string `protobuf:"bytes,2,opt,name=OpId,proto3" json:"OpId,omitempty"`
	Script     string `protobuf:"bytes,3,opt,name=Script,proto3" json:"Script,omitempty"`
	ResMsg     string `protobuf:"bytes,4,opt,name=ResMsg,proto3" json:"ResMsg,omitempty"`
	Path       string `protobuf:"bytes,5,opt,name=Path,proto3" json:"Path,omitempty"`
	FileData   []byte `protobuf:"bytes,6,opt,name=FileData,proto3" json:"FileData,omitempty"`
	FileName   string `protobuf:"bytes,7,opt,name=FileName,proto3" json:"FileName,omitempty"`
	OpStatus   int64  `protobuf:"varint,8,opt,name=OpStatus,proto3" json:"OpStatus,omitempty"`
	TimeLength int64  `protobuf:"varint,9,opt,name=TimeLength,proto3" json:"TimeLength,omitempty"`
}

func (x *ScriptInfo) Reset() {
	*x = ScriptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptInfo) ProtoMessage() {}

func (x *ScriptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptInfo.ProtoReflect.Descriptor instead.
func (*ScriptInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{95}
}

func (x *ScriptInfo) GetGateWayId() string {
	if x != nil {
		return x.GateWayId
	}
	return ""
}

func (x *ScriptInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *ScriptInfo) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *ScriptInfo) GetResMsg() string {
	if x != nil {
		return x.ResMsg
	}
	return ""
}

func (x *ScriptInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ScriptInfo) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

func (x *ScriptInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ScriptInfo) GetOpStatus() int64 {
	if x != nil {
		return x.OpStatus
	}
	return 0
}

func (x *ScriptInfo) GetTimeLength() int64 {
	if x != nil {
		return x.TimeLength
	}
	return 0
}

type MountDiskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpIP  string `protobuf:"bytes,1,opt,name=opIP,proto3" json:"opIP,omitempty"`
	OpDir string `protobuf:"bytes,2,opt,name=opDir,proto3" json:"opDir,omitempty"`
}

func (x *MountDiskInfo) Reset() {
	*x = MountDiskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountDiskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountDiskInfo) ProtoMessage() {}

func (x *MountDiskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountDiskInfo.ProtoReflect.Descriptor instead.
func (*MountDiskInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{96}
}

func (x *MountDiskInfo) GetOpIP() string {
	if x != nil {
		return x.OpIP
	}
	return ""
}

func (x *MountDiskInfo) GetOpDir() string {
	if x != nil {
		return x.OpDir
	}
	return ""
}

type WorkerTasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *OpenWindow `protobuf:"bytes,30,opt,name=info,proto3" json:"info,omitempty"`
	Tasks []*Task     `protobuf:"bytes,40,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *WorkerTasks) Reset() {
	*x = WorkerTasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerTasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerTasks) ProtoMessage() {}

func (x *WorkerTasks) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerTasks.ProtoReflect.Descriptor instead.
func (*WorkerTasks) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{97}
}

func (x *WorkerTasks) GetInfo() *OpenWindow {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *WorkerTasks) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type PreNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P1 int32 `protobuf:"varint,10,opt,name=P1,proto3" json:"P1,omitempty"`
	P2 int32 `protobuf:"varint,20,opt,name=P2,proto3" json:"P2,omitempty"`
}

func (x *PreNumber) Reset() {
	*x = PreNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreNumber) ProtoMessage() {}

func (x *PreNumber) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreNumber.ProtoReflect.Descriptor instead.
func (*PreNumber) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{98}
}

func (x *PreNumber) GetP1() int32 {
	if x != nil {
		return x.P1
	}
	return 0
}

func (x *PreNumber) GetP2() int32 {
	if x != nil {
		return x.P2
	}
	return 0
}

type C2SectorID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,50,opt,name=Id,proto3" json:"Id,omitempty"`
	Miner   string `protobuf:"bytes,10,opt,name=Miner,proto3" json:"Miner,omitempty"`
	Number  uint64 `protobuf:"varint,20,opt,name=Number,proto3" json:"Number,omitempty"`
	ResType uint64 `protobuf:"varint,30,opt,name=ResType,proto3" json:"ResType,omitempty"`
}

func (x *C2SectorID) Reset() {
	*x = C2SectorID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SectorID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SectorID) ProtoMessage() {}

func (x *C2SectorID) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SectorID.ProtoReflect.Descriptor instead.
func (*C2SectorID) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{99}
}

func (x *C2SectorID) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *C2SectorID) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *C2SectorID) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *C2SectorID) GetResType() uint64 {
	if x != nil {
		return x.ResType
	}
	return 0
}

type ProofC2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Miner  string `protobuf:"bytes,10,opt,name=Miner,proto3" json:"Miner,omitempty"`
	Number uint64 `protobuf:"varint,20,opt,name=Number,proto3" json:"Number,omitempty"`
	Bytes  uint64 `protobuf:"varint,30,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *ProofC2) Reset() {
	*x = ProofC2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofC2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofC2) ProtoMessage() {}

func (x *ProofC2) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofC2.ProtoReflect.Descriptor instead.
func (*ProofC2) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{100}
}

func (x *ProofC2) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *ProofC2) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ProofC2) GetBytes() uint64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

type AskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price         string `protobuf:"bytes,10,opt,name=Price,proto3" json:"Price,omitempty"`
	VerifiedPrice string `protobuf:"bytes,20,opt,name=VerifiedPrice,proto3" json:"VerifiedPrice,omitempty"`
	MinPieceSize  uint64 `protobuf:"varint,30,opt,name=MinPieceSize,proto3" json:"MinPieceSize,omitempty"`
	MaxPieceSize  uint64 `protobuf:"varint,40,opt,name=MaxPieceSize,proto3" json:"MaxPieceSize,omitempty"`
	Miner         string `protobuf:"bytes,50,opt,name=Miner,proto3" json:"Miner,omitempty"`
}

func (x *AskInfo) Reset() {
	*x = AskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskInfo) ProtoMessage() {}

func (x *AskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskInfo.ProtoReflect.Descriptor instead.
func (*AskInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{101}
}

func (x *AskInfo) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *AskInfo) GetVerifiedPrice() string {
	if x != nil {
		return x.VerifiedPrice
	}
	return ""
}

func (x *AskInfo) GetMinPieceSize() uint64 {
	if x != nil {
		return x.MinPieceSize
	}
	return 0
}

func (x *AskInfo) GetMaxPieceSize() uint64 {
	if x != nil {
		return x.MaxPieceSize
	}
	return 0
}

func (x *AskInfo) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

type SchedDiagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectorID uint64 `protobuf:"varint,10,opt,name=SectorID,proto3" json:"SectorID,omitempty"`
	TaskType string `protobuf:"bytes,20,opt,name=TaskType,proto3" json:"TaskType,omitempty"`
	Priority int32  `protobuf:"varint,30,opt,name=Priority,proto3" json:"Priority,omitempty"`
	SchedId  string `protobuf:"bytes,40,opt,name=SchedId,proto3" json:"SchedId,omitempty"`
}

func (x *SchedDiagInfo) Reset() {
	*x = SchedDiagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedDiagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedDiagInfo) ProtoMessage() {}

func (x *SchedDiagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedDiagInfo.ProtoReflect.Descriptor instead.
func (*SchedDiagInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{102}
}

func (x *SchedDiagInfo) GetSectorID() uint64 {
	if x != nil {
		return x.SectorID
	}
	return 0
}

func (x *SchedDiagInfo) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *SchedDiagInfo) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *SchedDiagInfo) GetSchedId() string {
	if x != nil {
		return x.SchedId
	}
	return ""
}

type SchedDiagRequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*SchedDiagInfo `protobuf:"bytes,10,rep,name=Requests,proto3" json:"Requests,omitempty"`
}

func (x *SchedDiagRequestInfo) Reset() {
	*x = SchedDiagRequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedDiagRequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedDiagRequestInfo) ProtoMessage() {}

func (x *SchedDiagRequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedDiagRequestInfo.ProtoReflect.Descriptor instead.
func (*SchedDiagRequestInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{103}
}

func (x *SchedDiagRequestInfo) GetRequests() []*SchedDiagInfo {
	if x != nil {
		return x.Requests
	}
	return nil
}

type Colony struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         uint64 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	ColonyType int32  `protobuf:"varint,20,opt,name=colonyType,proto3" json:"colonyType,omitempty"` //1 NFS,2 worker
	ColonyName string `protobuf:"bytes,30,opt,name=colonyName,proto3" json:"colonyName,omitempty"`  //1 NFS,2 worker
}

func (x *Colony) Reset() {
	*x = Colony{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Colony) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Colony) ProtoMessage() {}

func (x *Colony) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Colony.ProtoReflect.Descriptor instead.
func (*Colony) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{104}
}

func (x *Colony) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Colony) GetColonyType() int32 {
	if x != nil {
		return x.ColonyType
	}
	return 0
}

func (x *Colony) GetColonyName() string {
	if x != nil {
		return x.ColonyName
	}
	return ""
}

type MinerSectors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Live   uint64 `protobuf:"varint,1,opt,name=Live,proto3" json:"Live,omitempty"`
	Active uint64 `protobuf:"varint,2,opt,name=Active,proto3" json:"Active,omitempty"`
	Faulty uint64 `protobuf:"varint,3,opt,name=Faulty,proto3" json:"Faulty,omitempty"`
}

func (x *MinerSectors) Reset() {
	*x = MinerSectors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerSectors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerSectors) ProtoMessage() {}

func (x *MinerSectors) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerSectors.ProtoReflect.Descriptor instead.
func (*MinerSectors) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{105}
}

func (x *MinerSectors) GetLive() uint64 {
	if x != nil {
		return x.Live
	}
	return 0
}

func (x *MinerSectors) GetActive() uint64 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *MinerSectors) GetFaulty() uint64 {
	if x != nil {
		return x.Faulty
	}
	return 0
}

type Power struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerPower string `protobuf:"bytes,1,opt,name=MinerPower,proto3" json:"MinerPower,omitempty"`
	TotalPower string `protobuf:"bytes,2,opt,name=TotalPower,proto3" json:"TotalPower,omitempty"`
}

func (x *Power) Reset() {
	*x = Power{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Power) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Power) ProtoMessage() {}

func (x *Power) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Power.ProtoReflect.Descriptor instead.
func (*Power) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{106}
}

func (x *Power) GetMinerPower() string {
	if x != nil {
		return x.MinerPower
	}
	return ""
}

func (x *Power) GetTotalPower() string {
	if x != nil {
		return x.TotalPower
	}
	return ""
}

type ResetWorker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LinkId uint64 `protobuf:"varint,2,opt,name=linkId,proto3" json:"linkId,omitempty"`
	OpId   string `protobuf:"bytes,3,opt,name=opId,proto3" json:"opId,omitempty"`
	Ip     string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *ResetWorker) Reset() {
	*x = ResetWorker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetWorker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetWorker) ProtoMessage() {}

func (x *ResetWorker) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetWorker.ProtoReflect.Descriptor instead.
func (*ResetWorker) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{107}
}

func (x *ResetWorker) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResetWorker) GetLinkId() uint64 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

func (x *ResetWorker) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *ResetWorker) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type FilRestWorker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Worker  *ResetWorker `protobuf:"bytes,1,opt,name=worker,proto3" json:"worker,omitempty"`
	Host    *FilParam    `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	NewHost *FilParam    `protobuf:"bytes,3,opt,name=newHost,proto3" json:"newHost,omitempty"`
}

func (x *FilRestWorker) Reset() {
	*x = FilRestWorker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilRestWorker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilRestWorker) ProtoMessage() {}

func (x *FilRestWorker) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilRestWorker.ProtoReflect.Descriptor instead.
func (*FilRestWorker) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{108}
}

func (x *FilRestWorker) GetWorker() *ResetWorker {
	if x != nil {
		return x.Worker
	}
	return nil
}

func (x *FilRestWorker) GetHost() *FilParam {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *FilRestWorker) GetNewHost() *FilParam {
	if x != nil {
		return x.NewHost
	}
	return nil
}

type ReplaceFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName    string `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	ProductId   uint64 `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	DownloadUrl string `protobuf:"bytes,3,opt,name=DownloadUrl,proto3" json:"DownloadUrl,omitempty"`
}

func (x *ReplaceFile) Reset() {
	*x = ReplaceFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceFile) ProtoMessage() {}

func (x *ReplaceFile) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceFile.ProtoReflect.Descriptor instead.
func (*ReplaceFile) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{109}
}

func (x *ReplaceFile) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ReplaceFile) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ReplaceFile) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

type ReplaceFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName    string `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	ProductId   uint64 `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	DownloadUrl string `protobuf:"bytes,3,opt,name=DownloadUrl,proto3" json:"DownloadUrl,omitempty"`
}

func (x *ReplaceFileInfo) Reset() {
	*x = ReplaceFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceFileInfo) ProtoMessage() {}

func (x *ReplaceFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceFileInfo.ProtoReflect.Descriptor instead.
func (*ReplaceFileInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{110}
}

func (x *ReplaceFileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ReplaceFileInfo) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ReplaceFileInfo) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

type OpReplaceFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string         `protobuf:"bytes,10,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileInfo []*ReplaceInfo `protobuf:"bytes,20,rep,name=fileInfo,proto3" json:"fileInfo,omitempty"`
}

func (x *OpReplaceFileInfo) Reset() {
	*x = OpReplaceFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpReplaceFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpReplaceFileInfo) ProtoMessage() {}

func (x *OpReplaceFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpReplaceFileInfo.ProtoReflect.Descriptor instead.
func (*OpReplaceFileInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{111}
}

func (x *OpReplaceFileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *OpReplaceFileInfo) GetFileInfo() []*ReplaceInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type ReplaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System  string `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	FileMd5 string `protobuf:"bytes,2,opt,name=fileMd5,proto3" json:"fileMd5,omitempty"`
}

func (x *ReplaceInfo) Reset() {
	*x = ReplaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceInfo) ProtoMessage() {}

func (x *ReplaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceInfo.ProtoReflect.Descriptor instead.
func (*ReplaceInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{112}
}

func (x *ReplaceInfo) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *ReplaceInfo) GetFileMd5() string {
	if x != nil {
		return x.FileMd5
	}
	return ""
}

type HostRestartInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []*RestartInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
}

func (x *HostRestartInfo) Reset() {
	*x = HostRestartInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRestartInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRestartInfo) ProtoMessage() {}

func (x *HostRestartInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRestartInfo.ProtoReflect.Descriptor instead.
func (*HostRestartInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{113}
}

func (x *HostRestartInfo) GetInfo() []*RestartInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type RestartInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpType   string `protobuf:"bytes,1,opt,name=opType,proto3" json:"opType,omitempty"`
	OpStatus uint64 `protobuf:"varint,2,opt,name=opStatus,proto3" json:"opStatus,omitempty"`
}

func (x *RestartInfo) Reset() {
	*x = RestartInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartInfo) ProtoMessage() {}

func (x *RestartInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartInfo.ProtoReflect.Descriptor instead.
func (*RestartInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{114}
}

func (x *RestartInfo) GetOpType() string {
	if x != nil {
		return x.OpType
	}
	return ""
}

func (x *RestartInfo) GetOpStatus() uint64 {
	if x != nil {
		return x.OpStatus
	}
	return 0
}

type TaskCan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanAp   int32            `protobuf:"varint,10,opt,name=canAp,proto3" json:"canAp,omitempty"`
	CanP1   int32            `protobuf:"varint,20,opt,name=canP1,proto3" json:"canP1,omitempty"`
	CanP2   int32            `protobuf:"varint,30,opt,name=canP2,proto3" json:"canP2,omitempty"`
	Sectors []*SectorPathCan `protobuf:"bytes,35,rep,name=sectors,proto3" json:"sectors,omitempty"`
	Cars    []string         `protobuf:"bytes,50,rep,name=cars,proto3" json:"cars,omitempty"`
}

func (x *TaskCan) Reset() {
	*x = TaskCan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCan) ProtoMessage() {}

func (x *TaskCan) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCan.ProtoReflect.Descriptor instead.
func (*TaskCan) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{115}
}

func (x *TaskCan) GetCanAp() int32 {
	if x != nil {
		return x.CanAp
	}
	return 0
}

func (x *TaskCan) GetCanP1() int32 {
	if x != nil {
		return x.CanP1
	}
	return 0
}

func (x *TaskCan) GetCanP2() int32 {
	if x != nil {
		return x.CanP2
	}
	return 0
}

func (x *TaskCan) GetSectors() []*SectorPathCan {
	if x != nil {
		return x.Sectors
	}
	return nil
}

func (x *TaskCan) GetCars() []string {
	if x != nil {
		return x.Cars
	}
	return nil
}

type SectorPathCan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number   uint64 `protobuf:"varint,10,opt,name=number,proto3" json:"number,omitempty"`
	CanCount int32  `protobuf:"varint,20,opt,name=canCount,proto3" json:"canCount,omitempty"`
}

func (x *SectorPathCan) Reset() {
	*x = SectorPathCan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectorPathCan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectorPathCan) ProtoMessage() {}

func (x *SectorPathCan) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectorPathCan.ProtoReflect.Descriptor instead.
func (*SectorPathCan) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{116}
}

func (x *SectorPathCan) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *SectorPathCan) GetCanCount() int32 {
	if x != nil {
		return x.CanCount
	}
	return 0
}

type MinerSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor      string `protobuf:"bytes,10,opt,name=actor,proto3" json:"actor,omitempty"`
	SectorSize uint64 `protobuf:"varint,20,opt,name=sectorSize,proto3" json:"sectorSize,omitempty"`
}

func (x *MinerSize) Reset() {
	*x = MinerSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerSize) ProtoMessage() {}

func (x *MinerSize) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerSize.ProtoReflect.Descriptor instead.
func (*MinerSize) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{117}
}

func (x *MinerSize) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *MinerSize) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

type MonitorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LotusStatus       bool     `protobuf:"varint,1,opt,name=lotusStatus,proto3" json:"lotusStatus,omitempty"`
	MinerStatus       bool     `protobuf:"varint,2,opt,name=minerStatus,proto3" json:"minerStatus,omitempty"`
	BoostStatus       bool     `protobuf:"varint,3,opt,name=boostStatus,proto3" json:"boostStatus,omitempty"`
	WorkerStatus      bool     `protobuf:"varint,4,opt,name=workerStatus,proto3" json:"workerStatus,omitempty"`
	CpuUseRate        float32  `protobuf:"fixed32,5,opt,name=cpuUseRate,proto3" json:"cpuUseRate,omitempty"`
	SysDiskUseRate    string   `protobuf:"bytes,6,opt,name=sysDiskUseRate,proto3" json:"sysDiskUseRate,omitempty"`
	SysDiskLeave      string   `protobuf:"bytes,7,opt,name=sysDiskLeave,proto3" json:"sysDiskLeave,omitempty"`
	MainDiskUseRate   string   `protobuf:"bytes,8,opt,name=mainDiskUseRate,proto3" json:"mainDiskUseRate,omitempty"`
	MainDiskLeave     string   `protobuf:"bytes,9,opt,name=mainDiskLeave,proto3" json:"mainDiskLeave,omitempty"`
	DiskStatus        bool     `protobuf:"varint,10,opt,name=diskStatus,proto3" json:"diskStatus,omitempty"`
	GpuStatus         bool     `protobuf:"varint,11,opt,name=gpuStatus,proto3" json:"gpuStatus,omitempty"`
	MountStatus       bool     `protobuf:"varint,12,opt,name=mountStatus,proto3" json:"mountStatus,omitempty"`
	NfsStatus         bool     `protobuf:"varint,13,opt,name=nfsStatus,proto3" json:"nfsStatus,omitempty"`
	OpId              string   `protobuf:"bytes,14,opt,name=opId,proto3" json:"opId,omitempty"`
	LotusHeightStatus bool     `protobuf:"varint,15,opt,name=lotusHeightStatus,proto3" json:"lotusHeightStatus,omitempty"`
	Ips               []string `protobuf:"bytes,16,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *MonitorInfo) Reset() {
	*x = MonitorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorInfo) ProtoMessage() {}

func (x *MonitorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorInfo.ProtoReflect.Descriptor instead.
func (*MonitorInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{118}
}

func (x *MonitorInfo) GetLotusStatus() bool {
	if x != nil {
		return x.LotusStatus
	}
	return false
}

func (x *MonitorInfo) GetMinerStatus() bool {
	if x != nil {
		return x.MinerStatus
	}
	return false
}

func (x *MonitorInfo) GetBoostStatus() bool {
	if x != nil {
		return x.BoostStatus
	}
	return false
}

func (x *MonitorInfo) GetWorkerStatus() bool {
	if x != nil {
		return x.WorkerStatus
	}
	return false
}

func (x *MonitorInfo) GetCpuUseRate() float32 {
	if x != nil {
		return x.CpuUseRate
	}
	return 0
}

func (x *MonitorInfo) GetSysDiskUseRate() string {
	if x != nil {
		return x.SysDiskUseRate
	}
	return ""
}

func (x *MonitorInfo) GetSysDiskLeave() string {
	if x != nil {
		return x.SysDiskLeave
	}
	return ""
}

func (x *MonitorInfo) GetMainDiskUseRate() string {
	if x != nil {
		return x.MainDiskUseRate
	}
	return ""
}

func (x *MonitorInfo) GetMainDiskLeave() string {
	if x != nil {
		return x.MainDiskLeave
	}
	return ""
}

func (x *MonitorInfo) GetDiskStatus() bool {
	if x != nil {
		return x.DiskStatus
	}
	return false
}

func (x *MonitorInfo) GetGpuStatus() bool {
	if x != nil {
		return x.GpuStatus
	}
	return false
}

func (x *MonitorInfo) GetMountStatus() bool {
	if x != nil {
		return x.MountStatus
	}
	return false
}

func (x *MonitorInfo) GetNfsStatus() bool {
	if x != nil {
		return x.NfsStatus
	}
	return false
}

func (x *MonitorInfo) GetOpId() string {
	if x != nil {
		return x.OpId
	}
	return ""
}

func (x *MonitorInfo) GetLotusHeightStatus() bool {
	if x != nil {
		return x.LotusHeightStatus
	}
	return false
}

func (x *MonitorInfo) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

type OpScriptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostClassify int64  `protobuf:"varint,1,opt,name=hostClassify,proto3" json:"hostClassify,omitempty"`
	HostUUID     string `protobuf:"bytes,2,opt,name=hostUUID,proto3" json:"hostUUID,omitempty"`
	ScriptInfo   string `protobuf:"bytes,3,opt,name=scriptInfo,proto3" json:"scriptInfo,omitempty"`
}

func (x *OpScriptInfo) Reset() {
	*x = OpScriptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpScriptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpScriptInfo) ProtoMessage() {}

func (x *OpScriptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpScriptInfo.ProtoReflect.Descriptor instead.
func (*OpScriptInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{119}
}

func (x *OpScriptInfo) GetHostClassify() int64 {
	if x != nil {
		return x.HostClassify
	}
	return 0
}

func (x *OpScriptInfo) GetHostUUID() string {
	if x != nil {
		return x.HostUUID
	}
	return ""
}

func (x *OpScriptInfo) GetScriptInfo() string {
	if x != nil {
		return x.ScriptInfo
	}
	return ""
}

type DiskReMountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostClassify int64  `protobuf:"varint,1,opt,name=hostClassify,proto3" json:"hostClassify,omitempty"`
	HostUUID     string `protobuf:"bytes,2,opt,name=hostUUID,proto3" json:"hostUUID,omitempty"`
	Actor        string `protobuf:"bytes,3,opt,name=actor,proto3" json:"actor,omitempty"`
	NodeIP       string `protobuf:"bytes,4,opt,name=nodeIP,proto3" json:"nodeIP,omitempty"`
	MountOpId    string `protobuf:"bytes,5,opt,name=MountOpId,proto3" json:"MountOpId,omitempty"`
}

func (x *DiskReMountReq) Reset() {
	*x = DiskReMountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskReMountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskReMountReq) ProtoMessage() {}

func (x *DiskReMountReq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskReMountReq.ProtoReflect.Descriptor instead.
func (*DiskReMountReq) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{120}
}

func (x *DiskReMountReq) GetHostClassify() int64 {
	if x != nil {
		return x.HostClassify
	}
	return 0
}

func (x *DiskReMountReq) GetHostUUID() string {
	if x != nil {
		return x.HostUUID
	}
	return ""
}

func (x *DiskReMountReq) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *DiskReMountReq) GetNodeIP() string {
	if x != nil {
		return x.NodeIP
	}
	return ""
}

func (x *DiskReMountReq) GetMountOpId() string {
	if x != nil {
		return x.MountOpId
	}
	return ""
}

type OpScriptInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptResp string `protobuf:"bytes,1,opt,name=scriptResp,proto3" json:"scriptResp,omitempty"`
}

func (x *OpScriptInfoResp) Reset() {
	*x = OpScriptInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpScriptInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpScriptInfoResp) ProtoMessage() {}

func (x *OpScriptInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpScriptInfoResp.ProtoReflect.Descriptor instead.
func (*OpScriptInfoResp) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{121}
}

func (x *OpScriptInfoResp) GetScriptResp() string {
	if x != nil {
		return x.ScriptResp
	}
	return ""
}

type DiskLetterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostUUID   string `protobuf:"bytes,1,opt,name=hostUUID,proto3" json:"hostUUID,omitempty"`
	DiskLetter string `protobuf:"bytes,2,opt,name=diskLetter,proto3" json:"diskLetter,omitempty"`
}

func (x *DiskLetterReq) Reset() {
	*x = DiskLetterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskLetterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskLetterReq) ProtoMessage() {}

func (x *DiskLetterReq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskLetterReq.ProtoReflect.Descriptor instead.
func (*DiskLetterReq) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{122}
}

func (x *DiskLetterReq) GetHostUUID() string {
	if x != nil {
		return x.HostUUID
	}
	return ""
}

func (x *DiskLetterReq) GetDiskLetter() string {
	if x != nil {
		return x.DiskLetter
	}
	return ""
}

type OpMountDiskList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *OpMountDiskList) Reset() {
	*x = OpMountDiskList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpMountDiskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpMountDiskList) ProtoMessage() {}

func (x *OpMountDiskList) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpMountDiskList.ProtoReflect.Descriptor instead.
func (*OpMountDiskList) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{123}
}

func (x *OpMountDiskList) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

type OpLogInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostClassify int64  `protobuf:"varint,1,opt,name=hostClassify,proto3" json:"hostClassify,omitempty"`
	HostUUID     string `protobuf:"bytes,2,opt,name=hostUUID,proto3" json:"hostUUID,omitempty"`
	LogType      string `protobuf:"bytes,3,opt,name=logType,proto3" json:"logType,omitempty"`
	LogBeginNum  int64  `protobuf:"varint,4,opt,name=logBeginNum,proto3" json:"logBeginNum,omitempty"`
	GetNum       int64  `protobuf:"varint,5,opt,name=getNum,proto3" json:"getNum,omitempty"`
}

func (x *OpLogInfoReq) Reset() {
	*x = OpLogInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpLogInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpLogInfoReq) ProtoMessage() {}

func (x *OpLogInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpLogInfoReq.ProtoReflect.Descriptor instead.
func (*OpLogInfoReq) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{124}
}

func (x *OpLogInfoReq) GetHostClassify() int64 {
	if x != nil {
		return x.HostClassify
	}
	return 0
}

func (x *OpLogInfoReq) GetHostUUID() string {
	if x != nil {
		return x.HostUUID
	}
	return ""
}

func (x *OpLogInfoReq) GetLogType() string {
	if x != nil {
		return x.LogType
	}
	return ""
}

func (x *OpLogInfoReq) GetLogBeginNum() int64 {
	if x != nil {
		return x.LogBeginNum
	}
	return 0
}

func (x *OpLogInfoReq) GetGetNum() int64 {
	if x != nil {
		return x.GetNum
	}
	return 0
}

type OpLogInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogResp     string `protobuf:"bytes,1,opt,name=logResp,proto3" json:"logResp,omitempty"`
	LogBeginNum int64  `protobuf:"varint,2,opt,name=logBeginNum,proto3" json:"logBeginNum,omitempty"`
}

func (x *OpLogInfoResp) Reset() {
	*x = OpLogInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpLogInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpLogInfoResp) ProtoMessage() {}

func (x *OpLogInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpLogInfoResp.ProtoReflect.Descriptor instead.
func (*OpLogInfoResp) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{125}
}

func (x *OpLogInfoResp) GetLogResp() string {
	if x != nil {
		return x.LogResp
	}
	return ""
}

func (x *OpLogInfoResp) GetLogBeginNum() int64 {
	if x != nil {
		return x.LogBeginNum
	}
	return 0
}

type OpLogLenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLenNum int64 `protobuf:"varint,1,opt,name=logLenNum,proto3" json:"logLenNum,omitempty"`
}

func (x *OpLogLenResp) Reset() {
	*x = OpLogLenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpLogLenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpLogLenResp) ProtoMessage() {}

func (x *OpLogLenResp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpLogLenResp.ProtoReflect.Descriptor instead.
func (*OpLogLenResp) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{126}
}

func (x *OpLogLenResp) GetLogLenNum() int64 {
	if x != nil {
		return x.LogLenNum
	}
	return 0
}

type NodeMinerInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerAttribute     string `protobuf:"bytes,1,opt,name=minerAttribute,proto3" json:"minerAttribute,omitempty"`
	MinerProcessStatus bool   `protobuf:"varint,2,opt,name=minerProcessStatus,proto3" json:"minerProcessStatus,omitempty"`
	WinRemainingTime   string `protobuf:"bytes,3,opt,name=winRemainingTime,proto3" json:"winRemainingTime,omitempty"`
	MessageOut         bool   `protobuf:"varint,4,opt,name=messageOut,proto3" json:"messageOut,omitempty"`
	ProofRequiredTime  string `protobuf:"bytes,5,opt,name=proofRequiredTime,proto3" json:"proofRequiredTime,omitempty"`
	RestartStatus      bool   `protobuf:"varint,6,opt,name=restartStatus,proto3" json:"restartStatus,omitempty"`
	DailyExplosiveNum  int64  `protobuf:"varint,7,opt,name=dailyExplosiveNum,proto3" json:"dailyExplosiveNum,omitempty"`
}

func (x *NodeMinerInfoResp) Reset() {
	*x = NodeMinerInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_header_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeMinerInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMinerInfoResp) ProtoMessage() {}

func (x *NodeMinerInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_header_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMinerInfoResp.ProtoReflect.Descriptor instead.
func (*NodeMinerInfoResp) Descriptor() ([]byte, []int) {
	return file_service_proto_header_proto_rawDescGZIP(), []int{127}
}

func (x *NodeMinerInfoResp) GetMinerAttribute() string {
	if x != nil {
		return x.MinerAttribute
	}
	return ""
}

func (x *NodeMinerInfoResp) GetMinerProcessStatus() bool {
	if x != nil {
		return x.MinerProcessStatus
	}
	return false
}

func (x *NodeMinerInfoResp) GetWinRemainingTime() string {
	if x != nil {
		return x.WinRemainingTime
	}
	return ""
}

func (x *NodeMinerInfoResp) GetMessageOut() bool {
	if x != nil {
		return x.MessageOut
	}
	return false
}

func (x *NodeMinerInfoResp) GetProofRequiredTime() string {
	if x != nil {
		return x.ProofRequiredTime
	}
	return ""
}

func (x *NodeMinerInfoResp) GetRestartStatus() bool {
	if x != nil {
		return x.RestartStatus
	}
	return false
}

func (x *NodeMinerInfoResp) GetDailyExplosiveNum() int64 {
	if x != nil {
		return x.DailyExplosiveNum
	}
	return 0
}

var File_service_proto_header_proto protoreflect.FileDescriptor

var file_service_proto_header_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a,
	0x0b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x1e, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x1c, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2a, 0x0a, 0x0b, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12,
	0x1b, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x22, 0x47, 0x0a, 0x0a,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x07, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6e, 0x43, 0x32, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x72, 0x75, 0x6e, 0x43, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x22, 0xfa, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x57,
	0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x57, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x54, 0x79, 0x70, 0x65, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x46,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x72, 0x50, 0x61, 0x74, 0x68, 0x22, 0x27, 0x0a,
	0x08, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0xba, 0x02, 0x0a, 0x09, 0x4c, 0x6f, 0x74, 0x75, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x47, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65,
	0x63, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53,
	0x65, 0x63, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x6c, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x42, 0x6c, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e,
	0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x52, 0x61, 0x69, 0x64,
	0x18, 0x3d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x52, 0x61, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x46, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x4f, 0x70, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x07, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x73, 0x22, 0x38, 0x0a, 0x08, 0x4f, 0x70, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f,
	0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x33, 0x0a,
	0x07, 0x4f, 0x70, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x22, 0x50, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6f, 0x70, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x2f, 0x0a, 0x0a, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x07, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70,
	0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x22, 0x5e, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x22, 0xd3, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x29, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xb1, 0x03, 0x0a, 0x09, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6f, 0x70, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x70, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x57, 0x64, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x57, 0x64, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x57, 0x6e,
	0x70, 0x6f, 0x73, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x57, 0x6e,
	0x70, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x52, 0x61, 0x69, 0x64, 0x18, 0x5a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x52, 0x61, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf2,
	0x01, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x57, 0x64, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x57, 0x64, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x57,
	0x6e, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x57,
	0x6e, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x70,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f,
	0x70, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x22, 0x5f, 0x0a, 0x0b, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x70, 0x22, 0x3f, 0x0a, 0x09,
	0x68, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49,
	0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x5f, 0x0a,
	0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x7c,
	0x0a, 0x0c, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x72, 0x6f, 0x61, 0x67, 0x65, 0x12, 0x1e,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0xe5, 0x03, 0x0a,
	0x09, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x6e, 0x49, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x6e, 0x49, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x49, 0x70, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x49, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x31, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x64, 0x18,
	0x3b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x70, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x64, 0x63, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18,
	0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x63, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x22, 0x7c, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x69, 0x65, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x57, 0x61, 0x72, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x57, 0x61, 0x72, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x52, 0x75, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69,
	0x6e, 0x6b, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b,
	0x49, 0x64, 0x22, 0x45, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x22, 0x36, 0x0a, 0x08, 0x4f, 0x70, 0x55,
	0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x64,
	0x6f, 0x6e, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x6e, 0x64, 0x6f, 0x6e,
	0x65, 0x22, 0xac, 0x03, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x41, 0x64, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x61, 0x74, 0x65,
	0x57, 0x61, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x6c,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x5a,
	0x69, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x5a, 0x69, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xa4, 0x02, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x69, 0x6d,
	0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x94, 0x02, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x47,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x6f, 0x4f, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54,
	0x6f, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x5a, 0x69, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x5a, 0x69, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xba,
	0x01, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x06, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x4f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x61, 0x74,
	0x65, 0x57, 0x61, 0x79, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x50, 0x61, 0x74, 0x68, 0x22, 0x78, 0x0a, 0x06, 0x4f,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x70, 0x75,
	0x55, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x47, 0x70, 0x75, 0x55, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4f, 0x70, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x31, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x72,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x32, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x72, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x32, 0x22, 0xdc, 0x01, 0x0a, 0x0c, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65,
	0x73, 0x74, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x54, 0x65, 0x73, 0x74, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x73, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x49, 0x73, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x6f,
	0x73, 0x74, 0x49, 0x50, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48, 0x6f, 0x73,
	0x74, 0x49, 0x50, 0x73, 0x22, 0x4d, 0x0a, 0x11, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x74,
	0x65, 0x57, 0x61, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55,
	0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55,
	0x55, 0x49, 0x44, 0x22, 0x54, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x0a, 0x53, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x71, 0x0a, 0x0c,
	0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x35, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x73,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x69, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x4d, 0x73, 0x67, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x72, 0x65, 0x4d, 0x73,
	0x67, 0x22, 0x7b, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x82,
	0x01, 0x0a, 0x0b, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x69, 0x65, 0x63, 0x65, 0x12, 0x21,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x44, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x69, 0x65,
	0x63, 0x65, 0x43, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x69, 0x65,
	0x63, 0x65, 0x43, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x50, 0x69, 0x65, 0x63, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x6f,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x70,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x08,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x41, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x41, 0x74, 0x22, 0x75, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x44, 0x52, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52,
	0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6d, 0x6d, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6d, 0x6d, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x6d, 0x6d, 0x52, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x6d, 0x6d, 0x52, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x71, 0x0a, 0x0a, 0x53,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x44, 0x52, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x65, 0x65, 0x64, 0x48, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x65,
	0x64, 0x48, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5e,
	0x0a, 0x0b, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x21, 0x0a,
	0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe1,
	0x01, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x44, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x69, 0x73, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x55, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x55, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x6c, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x61, 0x6c,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x22, 0x58, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x49, 0x44, 0x12,
	0x21, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x06, 0x73, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x29, 0x0a, 0x0f,
	0x4c, 0x6f, 0x74, 0x75, 0x73, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x0e, 0x48, 0x6f, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x48, 0x6f,
	0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61,
	0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x50, 0x61, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61,
	0x74, 0x72, 0x6f, 0x6c, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x50, 0x61, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x50,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x61, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x6f,
	0x73, 0x74, 0x49, 0x50, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x54,
	0x65, 0x73, 0x74, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x48, 0x6f,
	0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x22, 0x38,
	0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x50, 0x0a, 0x0e, 0x4f, 0x70, 0x48, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x48, 0x6f,
	0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x22, 0x74, 0x0a, 0x09, 0x53, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x66, 0x12, 0x19, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x70, 0x72, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6f, 0x70, 0x49, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64,
	0x22, 0x8d, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x22, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x66, 0x52, 0x06, 0x53, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x68, 0x61, 0x73, 0x65, 0x31, 0x4f, 0x75,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x50, 0x68, 0x61, 0x73, 0x65, 0x31, 0x4f,
	0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70,
	0x49, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x43, 0x32, 0x49, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x43, 0x32, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x46,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70,
	0x4d, 0x61, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x4f, 0x70, 0x4d, 0x61, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x47, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x79, 0x4d, 0x61, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x18, 0x5a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x4d, 0x61, 0x69, 0x6e,
	0x44, 0x69, 0x73, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74,
	0x22, 0x43, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4f,
	0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x72, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x69,
	0x72, 0x50, 0x61, 0x74, 0x68, 0x22, 0x2d, 0x0a, 0x0a, 0x4f, 0x70, 0x43, 0x32, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x0a, 0x4f, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x34, 0x0a, 0x0e, 0x48, 0x6f,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x49, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x22, 0x21, 0x0a, 0x05, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73,
	0x49, 0x70, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x49,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x88, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x66, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x19, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x54, 0x61, 0x73, 0x6b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x78, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x50, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb0, 0x03, 0x0a,
	0x0b, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x34, 0x0a, 0x0d,
	0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x66, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x66, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x4e, 0x75, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x53, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x53, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x4f, 0x70, 0x49, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x4f, 0x70, 0x49, 0x70, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x49, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x4f, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x49, 0x70, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x49, 0x70, 0x12, 0x2c,
	0x0a, 0x11, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f,
	0x70, 0x49, 0x64, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x69, 0x72,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x69, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x78, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x50, 0x0a, 0x0a, 0x44, 0x69, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x4f, 0x70, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4f, 0x70, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x30, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x44, 0x69, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x22, 0x0a, 0x07, 0x64, 0x69, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x44, 0x69, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x64, 0x69, 0x72, 0x46,
	0x69, 0x6c, 0x65, 0x22, 0x37, 0x0a, 0x07, 0x44, 0x69, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x5a, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x69, 0x64, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x4d, 0x0a,
	0x08, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46, 0x69, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a, 0x0b,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x22, 0x39, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x54, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x54, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x54, 0x79, 0x70, 0x65, 0x22, 0x32,
	0x0a, 0x06, 0x4f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f,
	0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x2f, 0x0a, 0x0c, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x30, 0x0a, 0x0a,
	0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x22, 0x95,
	0x02, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x75, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x72, 0x75, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6a, 0x6f, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f,
	0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x50,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3c, 0x0a, 0x0a, 0x4f, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x72, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x0b, 0x42, 0x61, 0x64,
	0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x6e, 0x67,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x41, 0x64, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x7a, 0x0a, 0x0b, 0x50, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x8a, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x03,
	0x73, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x75, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x18, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4d, 0x0a,
	0x07, 0x43, 0x61, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x08,
	0x43, 0x61, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x61, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc9, 0x01, 0x0a,
	0x07, 0x43, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x50, 0x75,
	0x74, 0x44, 0x69, 0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6e, 0x50, 0x75,
	0x74, 0x44, 0x69, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x61, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x43, 0x69, 0x64, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x44, 0x61, 0x74, 0x61, 0x43, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x08,
	0x64, 0x65, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x4f,
	0x70, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x4f, 0x70,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x61, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x61, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x65, 0x63,
	0x65, 0x43, 0x69, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x65, 0x63,
	0x65, 0x43, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x05, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x64, 0x65, 0x61, 0x6c,
	0x73, 0x22, 0x4a, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x48, 0x0a,
	0x0c, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x79, 0x6e, 0x4f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x12,
	0x25, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x46, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x25,
	0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x49, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49,
	0x73, 0x53, 0x74, 0x6f, 0x70, 0x22, 0xf6, 0x01, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x39,
	0x0a, 0x0d, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f,
	0x70, 0x49, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x70, 0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x70, 0x44, 0x69, 0x72, 0x22, 0x4b, 0x0a, 0x0b, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x05, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x2b, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x50, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x50, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x50, 0x32, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x50, 0x32, 0x22, 0x64, 0x0a, 0x0a, 0x43, 0x32, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x07, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x43, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x07, 0x41, 0x73, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x50, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x4d, 0x69, 0x6e, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x4d, 0x61, 0x78, 0x50,
	0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x65,
	0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x7d,
	0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x44, 0x69, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x63, 0x68, 0x65, 0x64, 0x49, 0x64, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x63, 0x68, 0x65, 0x64, 0x49, 0x64, 0x22, 0x42, 0x0a,
	0x14, 0x53, 0x63, 0x68, 0x65, 0x64, 0x44, 0x69, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x44,
	0x69, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x22, 0x58, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6c, 0x6f, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6c, 0x6f, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x0c, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4c,
	0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x4c, 0x69, 0x76, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x61, 0x75, 0x6c, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x79, 0x22,
	0x47, 0x0a, 0x05, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x69, 0x6e, 0x65,
	0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x59, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f,
	0x70, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x22, 0x79, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46, 0x69, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x6e, 0x65, 0x77,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46, 0x69, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x48, 0x6f, 0x73, 0x74, 0x22, 0x69,
	0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x6d, 0x0a, 0x0f, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x59, 0x0a, 0x11, 0x4f, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x3f, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x4d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x4d, 0x64, 0x35, 0x22, 0x33, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x41, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x89, 0x01, 0x0a,
	0x07, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x6e, 0x41,
	0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x61, 0x6e, 0x41, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x61, 0x6e, 0x50, 0x31, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x61, 0x6e, 0x50, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x6e, 0x50, 0x32, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x61, 0x6e, 0x50, 0x32, 0x12, 0x28, 0x0a, 0x07, 0x73, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x74, 0x68, 0x43, 0x61, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x73, 0x18, 0x32, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x72, 0x73, 0x22, 0x43, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x50, 0x61, 0x74, 0x68, 0x43, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x41, 0x0a,
	0x09, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0xa5, 0x04, 0x0a, 0x0b, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x70,
	0x75, 0x55, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x63, 0x70, 0x75, 0x55, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x79,
	0x73, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x44, 0x69, 0x73, 0x6b, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x44, 0x69, 0x73,
	0x6b, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x69,
	0x73, 0x6b, 0x55, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x69, 0x73,
	0x6b, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x70, 0x75, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x67, 0x70, 0x75, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x66, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x66, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x6f, 0x74, 0x75,
	0x73, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22, 0x6e, 0x0a, 0x0c, 0x4f, 0x70, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x68, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x73,
	0x6b, 0x52, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x68,
	0x6f, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f,
	0x75, 0x6e, 0x74, 0x4f, 0x70, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x10, 0x4f, 0x70, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4b, 0x0a, 0x0d, 0x44,
	0x69, 0x73, 0x6b, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b,
	0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69,
	0x73, 0x6b, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x0f, 0x4f, 0x70, 0x4d, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22, 0xa2, 0x01,
	0x0a, 0x0c, 0x4f, 0x70, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x22,
	0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c,
	0x6f, 0x67, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x74, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x74, 0x4e,
	0x75, 0x6d, 0x22, 0x4b, 0x0a, 0x0d, 0x4f, 0x70, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a,
	0x0b, 0x6c, 0x6f, 0x67, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x22,
	0x2c, 0x0a, 0x0c, 0x4f, 0x70, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x22, 0xb9, 0x02,
	0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x77,
	0x69, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64,
	0x61, 0x69, 0x6c, 0x79, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x76, 0x65, 0x4e, 0x75, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x45, 0x78, 0x70,
	0x6c, 0x6f, 0x73, 0x69, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_header_proto_rawDescOnce sync.Once
	file_service_proto_header_proto_rawDescData = file_service_proto_header_proto_rawDesc
)

func file_service_proto_header_proto_rawDescGZIP() []byte {
	file_service_proto_header_proto_rawDescOnce.Do(func() {
		file_service_proto_header_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_header_proto_rawDescData)
	})
	return file_service_proto_header_proto_rawDescData
}

var file_service_proto_header_proto_msgTypes = make([]protoimpl.MessageInfo, 128)
var file_service_proto_header_proto_goTypes = []interface{}{
	(*ResponseMsg)(nil),           // 0: ResponseMsg
	(*String)(nil),                // 1: String
	(*Bool)(nil),                  // 2: Bool
	(*SectorPaths)(nil),           // 3: SectorPaths
	(*WorkerList)(nil),            // 4: WorkerList
	(*OpenWindow)(nil),            // 5: OpenWindow
	(*Task)(nil),                  // 6: Task
	(*TaskList)(nil),              // 7: TaskList
	(*LotusInfo)(nil),             // 8: LotusInfo
	(*OpWallet)(nil),              // 9: OpWallet
	(*OpMiner)(nil),               // 10: OpMiner
	(*Wallet)(nil),                // 11: Wallet
	(*WalletList)(nil),            // 12: WalletList
	(*RequestOp)(nil),             // 13: RequestOp
	(*RequestConnect)(nil),        // 14: RequestConnect
	(*ConnectInfo)(nil),           // 15: ConnectInfo
	(*MinerInfo)(nil),             // 16: MinerInfo
	(*MinerRun)(nil),              // 17: MinerRun
	(*WorkerInfo)(nil),            // 18: WorkerInfo
	(*StorageInfo)(nil),           // 19: StorageInfo
	(*HostParam)(nil),             // 20: hostParam
	(*BatchWorker)(nil),           // 21: batchWorker
	(*BatchStroage)(nil),          // 22: batchStroage
	(*BoostInfo)(nil),             // 23: BoostInfo
	(*StrategyInfo)(nil),          // 24: StrategyInfo
	(*WarnInfo)(nil),              // 25: WarnInfo
	(*RunStop)(nil),               // 26: RunStop
	(*RunStopType)(nil),           // 27: RunStopType
	(*OpUndone)(nil),              // 28: OpUndone
	(*AddFileInfo)(nil),           // 29: AddFileInfo
	(*FileInfo)(nil),              // 30: FileInfo
	(*SynFileInfo)(nil),           // 31: SynFileInfo
	(*DownLoadInfo)(nil),          // 32: DownLoadInfo
	(*OpInfo)(nil),                // 33: OpInfo
	(*WorkerConfig)(nil),          // 34: WorkerConfig
	(*HostTestInfo)(nil),          // 35: HostTestInfo
	(*HostCheckDiskInfo)(nil),     // 36: HostCheckDiskInfo
	(*SectorID)(nil),              // 37: SectorID
	(*SectorList)(nil),            // 38: SectorList
	(*SectorStatus)(nil),          // 39: SectorStatus
	(*SectorCount)(nil),           // 40: sectorCount
	(*StatusCount)(nil),           // 41: statusCount
	(*SectorTicket)(nil),          // 42: SectorTicket
	(*SectorPiece)(nil),           // 43: SectorPiece
	(*SectorLog)(nil),             // 44: SectorLog
	(*SectorCommDR)(nil),          // 45: SectorCommDR
	(*SectorSeed)(nil),            // 46: SectorSeed
	(*SectorProof)(nil),           // 47: SectorProof
	(*SectorPath)(nil),            // 48: SectorPath
	(*SectorCID)(nil),             // 49: SectorCID
	(*LotusHeightInfo)(nil),       // 50: LotusHeightInfo
	(*HostPatrolInfo)(nil),        // 51: HostPatrolInfo
	(*CloseHostTest)(nil),         // 52: CloseHostTest
	(*RestartHostTest)(nil),       // 53: RestartHostTest
	(*FileManage)(nil),            // 54: FileManage
	(*OpHardwareInfo)(nil),        // 55: OpHardwareInfo
	(*SectorRef)(nil),             // 56: SectorRef
	(*SealerParam)(nil),           // 57: SealerParam
	(*FileDirInfo)(nil),           // 58: FileDirInfo
	(*OpC2Client)(nil),            // 59: OpC2Client
	(*OpHostUUID)(nil),            // 60: OpHostUUID
	(*HostGroupArray)(nil),        // 61: HostGroupArray
	(*Actor)(nil),                 // 62: Actor
	(*QueryParam)(nil),            // 63: QueryParam
	(*SectorRefTask)(nil),         // 64: SectorRefTask
	(*SectorsTask)(nil),           // 65: SectorsTask
	(*DirFileReq)(nil),            // 66: DirFileReq
	(*ResDirFile)(nil),            // 67: ResDirFile
	(*DirFile)(nil),               // 68: DirFile
	(*FilParam)(nil),              // 69: FilParam
	(*SectorActorID)(nil),         // 70: SectorActorID
	(*LinkList)(nil),              // 71: LinkList
	(*ActorWallet)(nil),           // 72: ActorWallet
	(*TaskCount)(nil),             // 73: TaskCount
	(*OpTask)(nil),                // 74: OpTask
	(*TaskInfo)(nil),              // 75: TaskInfo
	(*TaskInfoList)(nil),          // 76: TaskInfoList
	(*TaskQueues)(nil),            // 77: TaskQueues
	(*TaskQueue)(nil),             // 78: TaskQueue
	(*OpFilePath)(nil),            // 79: OpFilePath
	(*TaskStatus)(nil),            // 80: TaskStatus
	(*BadSectorId)(nil),           // 81: BadSectorId
	(*PledgeParam)(nil),           // 82: PledgeParam
	(*SectorQueueDetail)(nil),     // 83: SectorQueueDetail
	(*CarFile)(nil),               // 84: CarFile
	(*CarArray)(nil),              // 85: CarArray
	(*CarInfo)(nil),               // 86: CarInfo
	(*DealParam)(nil),             // 87: dealParam
	(*DealInfo)(nil),              // 88: dealInfo
	(*DealList)(nil),              // 89: dealList
	(*EditStatus)(nil),            // 90: EditStatus
	(*FileNameInfo)(nil),          // 91: FileNameInfo
	(*FileSynOp)(nil),             // 92: FileSynOp
	(*StopTask)(nil),              // 93: StopTask
	(*JobPlatform)(nil),           // 94: JobPlatform
	(*ScriptInfo)(nil),            // 95: ScriptInfo
	(*MountDiskInfo)(nil),         // 96: MountDiskInfo
	(*WorkerTasks)(nil),           // 97: WorkerTasks
	(*PreNumber)(nil),             // 98: PreNumber
	(*C2SectorID)(nil),            // 99: C2SectorID
	(*ProofC2)(nil),               // 100: ProofC2
	(*AskInfo)(nil),               // 101: AskInfo
	(*SchedDiagInfo)(nil),         // 102: SchedDiagInfo
	(*SchedDiagRequestInfo)(nil),  // 103: SchedDiagRequestInfo
	(*Colony)(nil),                // 104: Colony
	(*MinerSectors)(nil),          // 105: MinerSectors
	(*Power)(nil),                 // 106: Power
	(*ResetWorker)(nil),           // 107: resetWorker
	(*FilRestWorker)(nil),         // 108: FilRestWorker
	(*ReplaceFile)(nil),           // 109: ReplaceFile
	(*ReplaceFileInfo)(nil),       // 110: ReplaceFileInfo
	(*OpReplaceFileInfo)(nil),     // 111: OpReplaceFileInfo
	(*ReplaceInfo)(nil),           // 112: ReplaceInfo
	(*HostRestartInfo)(nil),       // 113: HostRestartInfo
	(*RestartInfo)(nil),           // 114: RestartInfo
	(*TaskCan)(nil),               // 115: TaskCan
	(*SectorPathCan)(nil),         // 116: sectorPathCan
	(*MinerSize)(nil),             // 117: minerSize
	(*MonitorInfo)(nil),           // 118: MonitorInfo
	(*OpScriptInfo)(nil),          // 119: OpScriptInfo
	(*DiskReMountReq)(nil),        // 120: DiskReMountReq
	(*OpScriptInfoResp)(nil),      // 121: OpScriptInfoResp
	(*DiskLetterReq)(nil),         // 122: DiskLetterReq
	(*OpMountDiskList)(nil),       // 123: OpMountDiskList
	(*OpLogInfoReq)(nil),          // 124: OpLogInfoReq
	(*OpLogInfoResp)(nil),         // 125: OpLogInfoResp
	(*OpLogLenResp)(nil),          // 126: OpLogLenResp
	(*NodeMinerInfoResp)(nil),     // 127: NodeMinerInfoResp
	(*timestamppb.Timestamp)(nil), // 128: google.protobuf.Timestamp
}
var file_service_proto_header_proto_depIdxs = []int32{
	1,   // 0: SectorPaths.strs:type_name -> String
	5,   // 1: WorkerList.workers:type_name -> OpenWindow
	128, // 2: Task.StartTime:type_name -> google.protobuf.Timestamp
	6,   // 3: TaskList.tasks:type_name -> Task
	9,   // 4: LotusInfo.wallets:type_name -> OpWallet
	11,  // 5: WalletList.wallets:type_name -> Wallet
	20,  // 6: batchWorker.host:type_name -> hostParam
	20,  // 7: batchStroage.host:type_name -> hostParam
	30,  // 8: AddFileInfo.fileInfo:type_name -> FileInfo
	30,  // 9: SynFileInfo.fileInfo:type_name -> FileInfo
	33,  // 10: DownLoadInfo.opInfo:type_name -> OpInfo
	30,  // 11: DownLoadInfo.fileInfo:type_name -> FileInfo
	37,  // 12: SectorList.sectors:type_name -> SectorID
	37,  // 13: SectorStatus.sector:type_name -> SectorID
	41,  // 14: sectorCount.sectors:type_name -> statusCount
	37,  // 15: SectorTicket.sector:type_name -> SectorID
	37,  // 16: SectorPiece.sector:type_name -> SectorID
	37,  // 17: SectorLog.sector:type_name -> SectorID
	128, // 18: SectorLog.finishAt:type_name -> google.protobuf.Timestamp
	37,  // 19: SectorCommDR.sector:type_name -> SectorID
	37,  // 20: SectorSeed.sector:type_name -> SectorID
	37,  // 21: SectorProof.sector:type_name -> SectorID
	37,  // 22: SectorPath.Id:type_name -> SectorID
	37,  // 23: SectorCID.sector:type_name -> SectorID
	37,  // 24: SectorRef.Id:type_name -> SectorID
	56,  // 25: SealerParam.Sector:type_name -> SectorRef
	33,  // 26: OpC2Client.opInfo:type_name -> OpInfo
	37,  // 27: SectorRefTask.Id:type_name -> SectorID
	64,  // 28: SectorsTask.sectorRefTask:type_name -> SectorRefTask
	30,  // 29: SectorsTask.fileInfo:type_name -> FileInfo
	68,  // 30: ResDirFile.dirFile:type_name -> DirFile
	69,  // 31: LinkList.Links:type_name -> FilParam
	75,  // 32: TaskInfoList.tasks:type_name -> TaskInfo
	78,  // 33: TaskQueues.queues:type_name -> TaskQueue
	5,   // 34: PledgeParam.info:type_name -> OpenWindow
	37,  // 35: SectorQueueDetail.sid:type_name -> SectorID
	86,  // 36: CarArray.carInfo:type_name -> CarInfo
	88,  // 37: dealList.deals:type_name -> dealInfo
	30,  // 38: FileSynOp.fileInfo:type_name -> FileInfo
	5,   // 39: WorkerTasks.info:type_name -> OpenWindow
	6,   // 40: WorkerTasks.tasks:type_name -> Task
	102, // 41: SchedDiagRequestInfo.Requests:type_name -> SchedDiagInfo
	107, // 42: FilRestWorker.worker:type_name -> resetWorker
	69,  // 43: FilRestWorker.host:type_name -> FilParam
	69,  // 44: FilRestWorker.newHost:type_name -> FilParam
	112, // 45: OpReplaceFileInfo.fileInfo:type_name -> ReplaceInfo
	114, // 46: HostRestartInfo.info:type_name -> RestartInfo
	116, // 47: TaskCan.sectors:type_name -> sectorPathCan
	48,  // [48:48] is the sub-list for method output_type
	48,  // [48:48] is the sub-list for method input_type
	48,  // [48:48] is the sub-list for extension type_name
	48,  // [48:48] is the sub-list for extension extendee
	0,   // [0:48] is the sub-list for field type_name
}

func init() { file_service_proto_header_proto_init() }
func file_service_proto_header_proto_init() {
	if File_service_proto_header_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_header_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorPaths); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpMiner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestConnect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchWorker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchStroage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrategyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarnInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunStopType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpUndone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SynFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownLoadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostTestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostCheckDiskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorPiece); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorCommDR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorSeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorCID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotusHeightInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostPatrolInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseHostTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartHostTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileManage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpHardwareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SealerParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDirInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpC2Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpHostUUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGroupArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Actor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorRefTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorsTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDirFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorActorID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpFilePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadSectorId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PledgeParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorQueueDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileNameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSynOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobPlatform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountDiskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerTasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SectorID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofC2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedDiagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedDiagRequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Colony); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerSectors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Power); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetWorker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilRestWorker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpReplaceFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRestartInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectorPathCan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpScriptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskReMountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpScriptInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskLetterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpMountDiskList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpLogInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpLogInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpLogLenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_header_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeMinerInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_header_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   128,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_service_proto_header_proto_goTypes,
		DependencyIndexes: file_service_proto_header_proto_depIdxs,
		MessageInfos:      file_service_proto_header_proto_msgTypes,
	}.Build()
	File_service_proto_header_proto = out.File
	file_service_proto_header_proto_rawDesc = nil
	file_service_proto_header_proto_goTypes = nil
	file_service_proto_header_proto_depIdxs = nil
}
