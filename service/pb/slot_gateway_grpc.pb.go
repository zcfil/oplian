// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.5
// source: service/proto/slot/slot_gateway.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SlotGateServiceClient is the client API for SlotGateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SlotGateServiceClient interface {
	//workerCar RPC
	GetRunWorkerTask(ctx context.Context, in *String, opts ...grpc.CallOption) (*CarWorkerTaskNoInfo, error)
	ModifyCarTaskNo(ctx context.Context, in *CarWorkerTaskNoInfo, opts ...grpc.CallOption) (*ResponseMsg, error)
	AddCarWorkerTaskDetail(ctx context.Context, in *CarWorkerTaskDetailInfo, opts ...grpc.CallOption) (*ResponseMsg, error)
	GetRunCarTaskDetail(ctx context.Context, in *WorkerCarParam, opts ...grpc.CallOption) (*CarWorkerTaskDetailInfo, error)
	ModifyCarTaskDetailInfo(ctx context.Context, in *CarWorkerTaskDetailInfo, opts ...grpc.CallOption) (*ResponseMsg, error)
	GetRand(ctx context.Context, in *String, opts ...grpc.CallOption) (*RandList, error)
	GetWaitCarTaskDetail(ctx context.Context, in *WorkerCarParam, opts ...grpc.CallOption) (*CarWorkerTaskDetailInfo, error)
	GetAllCarTaskDetail(ctx context.Context, in *WorkerCarParam, opts ...grpc.CallOption) (*CarWorkerTaskDetailList, error)
	GetBoostConfig(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error)
	GetMainDisk(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error)
	DistributeWorkerTask(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error)
	AddCarRand(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error)
	CarFileExist(ctx context.Context, in *SectorID, opts ...grpc.CallOption) (*String, error)
	AddCarFile(ctx context.Context, in *CarFiles, opts ...grpc.CallOption) (*String, error)
	ReplacePlugFile(ctx context.Context, in *ReplaceFileInfo, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type slotGateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSlotGateServiceClient(cc grpc.ClientConnInterface) SlotGateServiceClient {
	return &slotGateServiceClient{cc}
}

func (c *slotGateServiceClient) GetRunWorkerTask(ctx context.Context, in *String, opts ...grpc.CallOption) (*CarWorkerTaskNoInfo, error) {
	out := new(CarWorkerTaskNoInfo)
	err := c.cc.Invoke(ctx, "/SlotGateService/GetRunWorkerTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) ModifyCarTaskNo(ctx context.Context, in *CarWorkerTaskNoInfo, opts ...grpc.CallOption) (*ResponseMsg, error) {
	out := new(ResponseMsg)
	err := c.cc.Invoke(ctx, "/SlotGateService/ModifyCarTaskNo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) AddCarWorkerTaskDetail(ctx context.Context, in *CarWorkerTaskDetailInfo, opts ...grpc.CallOption) (*ResponseMsg, error) {
	out := new(ResponseMsg)
	err := c.cc.Invoke(ctx, "/SlotGateService/AddCarWorkerTaskDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) GetRunCarTaskDetail(ctx context.Context, in *WorkerCarParam, opts ...grpc.CallOption) (*CarWorkerTaskDetailInfo, error) {
	out := new(CarWorkerTaskDetailInfo)
	err := c.cc.Invoke(ctx, "/SlotGateService/GetRunCarTaskDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) ModifyCarTaskDetailInfo(ctx context.Context, in *CarWorkerTaskDetailInfo, opts ...grpc.CallOption) (*ResponseMsg, error) {
	out := new(ResponseMsg)
	err := c.cc.Invoke(ctx, "/SlotGateService/ModifyCarTaskDetailInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) GetRand(ctx context.Context, in *String, opts ...grpc.CallOption) (*RandList, error) {
	out := new(RandList)
	err := c.cc.Invoke(ctx, "/SlotGateService/GetRand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) GetWaitCarTaskDetail(ctx context.Context, in *WorkerCarParam, opts ...grpc.CallOption) (*CarWorkerTaskDetailInfo, error) {
	out := new(CarWorkerTaskDetailInfo)
	err := c.cc.Invoke(ctx, "/SlotGateService/GetWaitCarTaskDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) GetAllCarTaskDetail(ctx context.Context, in *WorkerCarParam, opts ...grpc.CallOption) (*CarWorkerTaskDetailList, error) {
	out := new(CarWorkerTaskDetailList)
	err := c.cc.Invoke(ctx, "/SlotGateService/GetAllCarTaskDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) GetBoostConfig(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/SlotGateService/GetBoostConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) GetMainDisk(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/SlotGateService/GetMainDisk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) DistributeWorkerTask(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/SlotGateService/DistributeWorkerTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) AddCarRand(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/SlotGateService/AddCarRand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) CarFileExist(ctx context.Context, in *SectorID, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/SlotGateService/CarFileExist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) AddCarFile(ctx context.Context, in *CarFiles, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/SlotGateService/AddCarFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slotGateServiceClient) ReplacePlugFile(ctx context.Context, in *ReplaceFileInfo, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/SlotGateService/ReplacePlugFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SlotGateServiceServer is the server API for SlotGateService service.
// All implementations should embed UnimplementedSlotGateServiceServer
// for forward compatibility
type SlotGateServiceServer interface {
	//workerCar RPC
	GetRunWorkerTask(context.Context, *String) (*CarWorkerTaskNoInfo, error)
	ModifyCarTaskNo(context.Context, *CarWorkerTaskNoInfo) (*ResponseMsg, error)
	AddCarWorkerTaskDetail(context.Context, *CarWorkerTaskDetailInfo) (*ResponseMsg, error)
	GetRunCarTaskDetail(context.Context, *WorkerCarParam) (*CarWorkerTaskDetailInfo, error)
	ModifyCarTaskDetailInfo(context.Context, *CarWorkerTaskDetailInfo) (*ResponseMsg, error)
	GetRand(context.Context, *String) (*RandList, error)
	GetWaitCarTaskDetail(context.Context, *WorkerCarParam) (*CarWorkerTaskDetailInfo, error)
	GetAllCarTaskDetail(context.Context, *WorkerCarParam) (*CarWorkerTaskDetailList, error)
	GetBoostConfig(context.Context, *String) (*String, error)
	GetMainDisk(context.Context, *String) (*String, error)
	DistributeWorkerTask(context.Context, *String) (*String, error)
	AddCarRand(context.Context, *String) (*String, error)
	CarFileExist(context.Context, *SectorID) (*String, error)
	AddCarFile(context.Context, *CarFiles) (*String, error)
	ReplacePlugFile(context.Context, *ReplaceFileInfo) (*emptypb.Empty, error)
}

// UnimplementedSlotGateServiceServer should be embedded to have forward compatible implementations.
type UnimplementedSlotGateServiceServer struct {
}

func (UnimplementedSlotGateServiceServer) GetRunWorkerTask(context.Context, *String) (*CarWorkerTaskNoInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRunWorkerTask not implemented")
}
func (UnimplementedSlotGateServiceServer) ModifyCarTaskNo(context.Context, *CarWorkerTaskNoInfo) (*ResponseMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyCarTaskNo not implemented")
}
func (UnimplementedSlotGateServiceServer) AddCarWorkerTaskDetail(context.Context, *CarWorkerTaskDetailInfo) (*ResponseMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCarWorkerTaskDetail not implemented")
}
func (UnimplementedSlotGateServiceServer) GetRunCarTaskDetail(context.Context, *WorkerCarParam) (*CarWorkerTaskDetailInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRunCarTaskDetail not implemented")
}
func (UnimplementedSlotGateServiceServer) ModifyCarTaskDetailInfo(context.Context, *CarWorkerTaskDetailInfo) (*ResponseMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyCarTaskDetailInfo not implemented")
}
func (UnimplementedSlotGateServiceServer) GetRand(context.Context, *String) (*RandList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRand not implemented")
}
func (UnimplementedSlotGateServiceServer) GetWaitCarTaskDetail(context.Context, *WorkerCarParam) (*CarWorkerTaskDetailInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWaitCarTaskDetail not implemented")
}
func (UnimplementedSlotGateServiceServer) GetAllCarTaskDetail(context.Context, *WorkerCarParam) (*CarWorkerTaskDetailList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCarTaskDetail not implemented")
}
func (UnimplementedSlotGateServiceServer) GetBoostConfig(context.Context, *String) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBoostConfig not implemented")
}
func (UnimplementedSlotGateServiceServer) GetMainDisk(context.Context, *String) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMainDisk not implemented")
}
func (UnimplementedSlotGateServiceServer) DistributeWorkerTask(context.Context, *String) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DistributeWorkerTask not implemented")
}
func (UnimplementedSlotGateServiceServer) AddCarRand(context.Context, *String) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCarRand not implemented")
}
func (UnimplementedSlotGateServiceServer) CarFileExist(context.Context, *SectorID) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CarFileExist not implemented")
}
func (UnimplementedSlotGateServiceServer) AddCarFile(context.Context, *CarFiles) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCarFile not implemented")
}
func (UnimplementedSlotGateServiceServer) ReplacePlugFile(context.Context, *ReplaceFileInfo) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplacePlugFile not implemented")
}

// UnsafeSlotGateServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SlotGateServiceServer will
// result in compilation errors.
type UnsafeSlotGateServiceServer interface {
	mustEmbedUnimplementedSlotGateServiceServer()
}

func RegisterSlotGateServiceServer(s grpc.ServiceRegistrar, srv SlotGateServiceServer) {
	s.RegisterService(&SlotGateService_ServiceDesc, srv)
}

func _SlotGateService_GetRunWorkerTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).GetRunWorkerTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/GetRunWorkerTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).GetRunWorkerTask(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_ModifyCarTaskNo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarWorkerTaskNoInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).ModifyCarTaskNo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/ModifyCarTaskNo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).ModifyCarTaskNo(ctx, req.(*CarWorkerTaskNoInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_AddCarWorkerTaskDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarWorkerTaskDetailInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).AddCarWorkerTaskDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/AddCarWorkerTaskDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).AddCarWorkerTaskDetail(ctx, req.(*CarWorkerTaskDetailInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_GetRunCarTaskDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkerCarParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).GetRunCarTaskDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/GetRunCarTaskDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).GetRunCarTaskDetail(ctx, req.(*WorkerCarParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_ModifyCarTaskDetailInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarWorkerTaskDetailInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).ModifyCarTaskDetailInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/ModifyCarTaskDetailInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).ModifyCarTaskDetailInfo(ctx, req.(*CarWorkerTaskDetailInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_GetRand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).GetRand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/GetRand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).GetRand(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_GetWaitCarTaskDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkerCarParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).GetWaitCarTaskDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/GetWaitCarTaskDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).GetWaitCarTaskDetail(ctx, req.(*WorkerCarParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_GetAllCarTaskDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkerCarParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).GetAllCarTaskDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/GetAllCarTaskDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).GetAllCarTaskDetail(ctx, req.(*WorkerCarParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_GetBoostConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).GetBoostConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/GetBoostConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).GetBoostConfig(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_GetMainDisk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).GetMainDisk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/GetMainDisk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).GetMainDisk(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_DistributeWorkerTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).DistributeWorkerTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/DistributeWorkerTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).DistributeWorkerTask(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_AddCarRand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).AddCarRand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/AddCarRand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).AddCarRand(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_CarFileExist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SectorID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).CarFileExist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/CarFileExist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).CarFileExist(ctx, req.(*SectorID))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_AddCarFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarFiles)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).AddCarFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/AddCarFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).AddCarFile(ctx, req.(*CarFiles))
	}
	return interceptor(ctx, in, info, handler)
}

func _SlotGateService_ReplacePlugFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceFileInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlotGateServiceServer).ReplacePlugFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SlotGateService/ReplacePlugFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlotGateServiceServer).ReplacePlugFile(ctx, req.(*ReplaceFileInfo))
	}
	return interceptor(ctx, in, info, handler)
}

// SlotGateService_ServiceDesc is the grpc.ServiceDesc for SlotGateService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SlotGateService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "SlotGateService",
	HandlerType: (*SlotGateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRunWorkerTask",
			Handler:    _SlotGateService_GetRunWorkerTask_Handler,
		},
		{
			MethodName: "ModifyCarTaskNo",
			Handler:    _SlotGateService_ModifyCarTaskNo_Handler,
		},
		{
			MethodName: "AddCarWorkerTaskDetail",
			Handler:    _SlotGateService_AddCarWorkerTaskDetail_Handler,
		},
		{
			MethodName: "GetRunCarTaskDetail",
			Handler:    _SlotGateService_GetRunCarTaskDetail_Handler,
		},
		{
			MethodName: "ModifyCarTaskDetailInfo",
			Handler:    _SlotGateService_ModifyCarTaskDetailInfo_Handler,
		},
		{
			MethodName: "GetRand",
			Handler:    _SlotGateService_GetRand_Handler,
		},
		{
			MethodName: "GetWaitCarTaskDetail",
			Handler:    _SlotGateService_GetWaitCarTaskDetail_Handler,
		},
		{
			MethodName: "GetAllCarTaskDetail",
			Handler:    _SlotGateService_GetAllCarTaskDetail_Handler,
		},
		{
			MethodName: "GetBoostConfig",
			Handler:    _SlotGateService_GetBoostConfig_Handler,
		},
		{
			MethodName: "GetMainDisk",
			Handler:    _SlotGateService_GetMainDisk_Handler,
		},
		{
			MethodName: "DistributeWorkerTask",
			Handler:    _SlotGateService_DistributeWorkerTask_Handler,
		},
		{
			MethodName: "AddCarRand",
			Handler:    _SlotGateService_AddCarRand_Handler,
		},
		{
			MethodName: "CarFileExist",
			Handler:    _SlotGateService_CarFileExist_Handler,
		},
		{
			MethodName: "AddCarFile",
			Handler:    _SlotGateService_AddCarFile_Handler,
		},
		{
			MethodName: "ReplacePlugFile",
			Handler:    _SlotGateService_ReplacePlugFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/proto/slot/slot_gateway.proto",
}
